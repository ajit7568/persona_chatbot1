{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajits\\\\fastapi-react-chatbot\\\\frontend\\\\src\\\\components\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion, LayoutGroup } from 'framer-motion';\nimport { PaperAirplaneIcon, ChevronDownIcon } from '@heroicons/react/24/solid';\nimport { sendMessage, fetchCharacters } from '../services/api';\nimport { messageVariants, dropdownVariants, containerVariants } from '../styles/variants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCharacterColor = name => {\n  switch (name) {\n    case 'Tony Stark':\n      return 'bg-red-600';\n    case 'Yoda':\n      return 'bg-green-600';\n    case 'Sherlock Holmes':\n      return 'bg-indigo-600';\n    case 'Batman':\n      return 'bg-gray-900';\n    default:\n      return 'bg-blue-600';\n  }\n};\nconst TypingAnimation = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"flex space-x-2 p-3\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-2 h-2 bg-gray-400 rounded-full typing-dot\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-2 h-2 bg-gray-400 rounded-full typing-dot\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-2 h-2 bg-gray-400 rounded-full typing-dot\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 5\n}, this);\n_c = TypingAnimation;\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [characters, setCharacters] = useState([]);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const loadCharacters = async () => {\n    try {\n      const data = await fetchCharacters();\n      setCharacters(data);\n    } catch (error) {\n      setError('Failed to load characters. Please try again later.');\n      console.error('Error fetching characters:', error);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (input.trim() && !isLoading) {\n      const userMessageId = Date.now().toString();\n      const userMessage = {\n        text: input,\n        isUser: true,\n        id: userMessageId\n      };\n      setMessages(prev => [...prev, userMessage]);\n      setInput('');\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await sendMessage({\n          message: input,\n          character_id: selectedCharacter === null || selectedCharacter === void 0 ? void 0 : selectedCharacter.id\n        });\n\n        // Add loading message while waiting for response\n        const loadingMessage = {\n          id: 'loading',\n          text: '',\n          isUser: false,\n          isLoading: true\n        };\n        setMessages(prev => [...prev, loadingMessage]);\n        scrollToBottom();\n\n        // Simulate typing effect\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n        // Replace loading message with actual response\n        setMessages(prev => prev.filter(msg => msg.id !== 'loading').concat({\n          text: response.response,\n          isUser: false,\n          id: (Date.now() + 1).toString()\n        }));\n      } catch (error) {\n        setError('Failed to send message. Please try again.');\n        console.error('Error sending message:', error);\n      } finally {\n        setIsLoading(false);\n        scrollToBottom();\n      }\n    }\n  };\n  useEffect(() => {\n    loadCharacters();\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(LayoutGroup, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-900 p-4\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        variants: containerVariants,\n        initial: \"hidden\",\n        animate: \"visible\",\n        className: \"w-full max-w-4xl rounded-xl bg-gray-800 shadow-2xl overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            ref: dropdownRef,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsDropdownOpen(!isDropdownOpen),\n              className: \"w-full p-3 text-left bg-gray-700 hover:bg-gray-600 rounded-lg flex items-center justify-between text-white transition-colors duration-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-3\",\n                children: [selectedCharacter && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `w-3 h-3 rounded-full ${getCharacterColor(selectedCharacter.name)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"block\",\n                    children: selectedCharacter ? `${selectedCharacter.name} from ${selectedCharacter.movie}` : 'Select a character'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 41\n                  }, this), selectedCharacter && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm text-gray-400 mt-1 block\",\n                    children: [\"Chat style: \", selectedCharacter.chat_style]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n                className: `w-5 h-5 transition-transform duration-200 ${isDropdownOpen ? 'transform rotate-180' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n              variants: dropdownVariants,\n              initial: \"hidden\",\n              animate: \"visible\",\n              exit: \"hidden\",\n              className: \"absolute w-full mt-2 py-2 bg-gray-700 rounded-lg shadow-xl z-10\",\n              children: characters.map(character => /*#__PURE__*/_jsxDEV(motion.button, {\n                whileHover: {\n                  backgroundColor: 'rgba(75, 85, 99, 1)'\n                },\n                onClick: () => {\n                  setSelectedCharacter(character);\n                  setIsDropdownOpen(false);\n                },\n                className: \"w-full px-4 py-3 text-left text-white hover:bg-gray-600 transition-colors duration-200\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `w-3 h-3 rounded-full ${getCharacterColor(character.name)}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"block\",\n                      children: [character.name, \" from \", character.movie]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm text-gray-400 mt-1 block\",\n                      children: character.chat_style\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 45\n                }, this)\n              }, character.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-[60vh] overflow-y-auto p-4 bg-gray-800\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [messages.map(msg => /*#__PURE__*/_jsxDEV(motion.div, {\n              variants: messageVariants,\n              initial: \"initial\",\n              animate: \"animate\",\n              exit: \"exit\",\n              layout: true,\n              className: `flex ${msg.isUser ? 'justify-end' : 'justify-start'}`,\n              children: msg.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-700 rounded-2xl\",\n                children: /*#__PURE__*/_jsxDEV(TypingAnimation, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `max-w-[70%] rounded-2xl px-6 py-3 ${msg.isUser ? 'bg-blue-600 text-white ml-auto' : `${selectedCharacter ? getCharacterColor(selectedCharacter.name) : 'bg-gray-700'} text-gray-100`} shadow-lg`,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm md:text-base\",\n                  children: msg.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 41\n              }, this)\n            }, msg.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this)), error && /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0\n              },\n              animate: {\n                opacity: 1\n              },\n              className: \"text-red-500 text-center py-2\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: isLoading ? \"Waiting for response...\" : `Chat with ${(selectedCharacter === null || selectedCharacter === void 0 ? void 0 : selectedCharacter.name) || 'a character'}...`,\n              disabled: isLoading,\n              className: \"flex-1 p-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n              type: \"submit\",\n              disabled: isLoading || !input.trim(),\n              whileHover: {\n                scale: 1.05\n              },\n              whileTap: {\n                scale: 0.95\n              },\n              className: `p-3 ${selectedCharacter ? getCharacterColor(selectedCharacter.name) : 'bg-blue-600'} text-white rounded-lg hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed`,\n              children: /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"NScasUFTtewi1mP+hmoOd5OlnFU=\");\n_c2 = Chat;\nexport default Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"TypingAnimation\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","LayoutGroup","PaperAirplaneIcon","ChevronDownIcon","sendMessage","fetchCharacters","messageVariants","dropdownVariants","containerVariants","jsxDEV","_jsxDEV","getCharacterColor","name","TypingAnimation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chat","_s","messages","setMessages","input","setInput","characters","setCharacters","selectedCharacter","setSelectedCharacter","isDropdownOpen","setIsDropdownOpen","isLoading","setIsLoading","error","setError","messagesEndRef","dropdownRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadCharacters","data","console","handleSendMessage","e","preventDefault","trim","userMessageId","Date","now","toString","userMessage","text","isUser","id","prev","response","message","character_id","loadingMessage","Promise","resolve","setTimeout","filter","msg","concat","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","div","variants","initial","animate","ref","onClick","movie","chat_style","exit","map","character","button","whileHover","backgroundColor","layout","opacity","onSubmit","type","value","onChange","placeholder","disabled","scale","whileTap","_c2","$RefreshReg$"],"sources":["C:/Users/ajits/fastapi-react-chatbot/frontend/src/components/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\nimport { PaperAirplaneIcon, ChevronDownIcon } from '@heroicons/react/24/solid';\nimport { sendMessage, fetchCharacters } from '../services/api';\nimport { messageVariants, dropdownVariants, containerVariants } from '../styles/variants';\n\ninterface Character {\n    id: number;\n    name: string;\n    movie: string;\n    chat_style: string;\n    example_responses: string[];\n}\n\ninterface Message {\n    text: string;\n    isUser: boolean;\n    id: string;\n    isLoading?: boolean;\n}\n\nconst getCharacterColor = (name: string): string => {\n    switch (name) {\n        case 'Tony Stark':\n            return 'bg-red-600';\n        case 'Yoda':\n            return 'bg-green-600';\n        case 'Sherlock Holmes':\n            return 'bg-indigo-600';\n        case 'Batman':\n            return 'bg-gray-900';\n        default:\n            return 'bg-blue-600';\n    }\n};\n\nconst TypingAnimation: React.FC = () => (\n    <div className=\"flex space-x-2 p-3\">\n        <div className=\"w-2 h-2 bg-gray-400 rounded-full typing-dot\" />\n        <div className=\"w-2 h-2 bg-gray-400 rounded-full typing-dot\" />\n        <div className=\"w-2 h-2 bg-gray-400 rounded-full typing-dot\" />\n    </div>\n);\n\nconst Chat: React.FC = () => {\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [input, setInput] = useState<string>('');\n    const [characters, setCharacters] = useState<Character[]>([]);\n    const [selectedCharacter, setSelectedCharacter] = useState<Character | null>(null);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const messagesEndRef = useRef<HTMLDivElement>(null);\n    const dropdownRef = useRef<HTMLDivElement>(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    const loadCharacters = async () => {\n        try {\n            const data = await fetchCharacters();\n            setCharacters(data);\n        } catch (error) {\n            setError('Failed to load characters. Please try again later.');\n            console.error('Error fetching characters:', error);\n        }\n    };\n\n    const handleSendMessage = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (input.trim() && !isLoading) {\n            const userMessageId = Date.now().toString();\n            const userMessage = { text: input, isUser: true, id: userMessageId };\n            \n            setMessages(prev => [...prev, userMessage]);\n            setInput('');\n            setIsLoading(true);\n            setError(null);\n\n            try {\n                const response = await sendMessage({\n                    message: input,\n                    character_id: selectedCharacter?.id\n                });\n\n                // Add loading message while waiting for response\n                const loadingMessage: Message = {\n                    id: 'loading',\n                    text: '',\n                    isUser: false,\n                    isLoading: true\n                };\n\n                setMessages(prev => [...prev, loadingMessage]);\n                scrollToBottom();\n\n                // Simulate typing effect\n                await new Promise(resolve => setTimeout(resolve, 500));\n\n                // Replace loading message with actual response\n                setMessages(prev => \n                    prev.filter(msg => msg.id !== 'loading').concat({\n                        text: response.response,\n                        isUser: false,\n                        id: (Date.now() + 1).toString()\n                    })\n                );\n            } catch (error) {\n                setError('Failed to send message. Please try again.');\n                console.error('Error sending message:', error);\n            } finally {\n                setIsLoading(false);\n                scrollToBottom();\n            }\n        }\n    };\n\n    useEffect(() => {\n        loadCharacters();\n\n        const handleClickOutside = (event: MouseEvent) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n                setIsDropdownOpen(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n\n    return (\n        <LayoutGroup>\n            <div className=\"flex items-center justify-center min-h-screen bg-gray-900 p-4\">\n                <motion.div \n                    variants={containerVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    className=\"w-full max-w-4xl rounded-xl bg-gray-800 shadow-2xl overflow-hidden\"\n                >\n                    <div className=\"p-4 border-b border-gray-700\">\n                        <div className=\"relative\" ref={dropdownRef}>\n                            <button\n                                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                                className=\"w-full p-3 text-left bg-gray-700 hover:bg-gray-600 rounded-lg flex items-center justify-between text-white transition-colors duration-200\"\n                            >\n                                <div className=\"flex items-center space-x-3\">\n                                    {selectedCharacter && (\n                                        <div className={`w-3 h-3 rounded-full ${getCharacterColor(selectedCharacter.name)}`} />\n                                    )}\n                                    <div>\n                                        <span className=\"block\">\n                                            {selectedCharacter ? `${selectedCharacter.name} from ${selectedCharacter.movie}` : 'Select a character'}\n                                        </span>\n                                        {selectedCharacter && (\n                                            <span className=\"text-sm text-gray-400 mt-1 block\">\n                                                Chat style: {selectedCharacter.chat_style}\n                                            </span>\n                                        )}\n                                    </div>\n                                </div>\n                                <ChevronDownIcon className={`w-5 h-5 transition-transform duration-200 ${isDropdownOpen ? 'transform rotate-180' : ''}`} />\n                            </button>\n                            \n                            {isDropdownOpen && (\n                                <motion.div\n                                    variants={dropdownVariants}\n                                    initial=\"hidden\"\n                                    animate=\"visible\"\n                                    exit=\"hidden\"\n                                    className=\"absolute w-full mt-2 py-2 bg-gray-700 rounded-lg shadow-xl z-10\"\n                                >\n                                    {characters.map((character) => (\n                                        <motion.button\n                                            key={character.id}\n                                            whileHover={{ backgroundColor: 'rgba(75, 85, 99, 1)' }}\n                                            onClick={() => {\n                                                setSelectedCharacter(character);\n                                                setIsDropdownOpen(false);\n                                            }}\n                                            className=\"w-full px-4 py-3 text-left text-white hover:bg-gray-600 transition-colors duration-200\"\n                                        >\n                                            <div className=\"flex items-center space-x-3\">\n                                                <div className={`w-3 h-3 rounded-full ${getCharacterColor(character.name)}`} />\n                                                <div>\n                                                    <span className=\"block\">{character.name} from {character.movie}</span>\n                                                    <span className=\"text-sm text-gray-400 mt-1 block\">\n                                                        {character.chat_style}\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </motion.button>\n                                    ))}\n                                </motion.div>\n                            )}\n                        </div>\n                    </div>\n\n                    <div className=\"h-[60vh] overflow-y-auto p-4 bg-gray-800\">\n                        <div className=\"space-y-4\">\n                            {messages.map((msg) => (\n                                <motion.div\n                                    key={msg.id}\n                                    variants={messageVariants}\n                                    initial=\"initial\"\n                                    animate=\"animate\"\n                                    exit=\"exit\"\n                                    layout\n                                    className={`flex ${msg.isUser ? 'justify-end' : 'justify-start'}`}\n                                >\n                                    {msg.isLoading ? (\n                                        <div className=\"bg-gray-700 rounded-2xl\">\n                                            <TypingAnimation />\n                                        </div>\n                                    ) : (\n                                        <div\n                                            className={`max-w-[70%] rounded-2xl px-6 py-3 ${\n                                                msg.isUser\n                                                    ? 'bg-blue-600 text-white ml-auto'\n                                                    : `${selectedCharacter ? getCharacterColor(selectedCharacter.name) : 'bg-gray-700'} text-gray-100`\n                                            } shadow-lg`}\n                                        >\n                                            <p className=\"text-sm md:text-base\">{msg.text}</p>\n                                        </div>\n                                    )}\n                                </motion.div>\n                            ))}\n                            {error && (\n                                <motion.div\n                                    initial={{ opacity: 0 }}\n                                    animate={{ opacity: 1 }}\n                                    className=\"text-red-500 text-center py-2\"\n                                >\n                                    {error}\n                                </motion.div>\n                            )}\n                            <div ref={messagesEndRef} />\n                        </div>\n                    </div>\n\n                    <div className=\"p-4 border-t border-gray-700\">\n                        <form onSubmit={handleSendMessage} className=\"flex gap-2\">\n                            <input\n                                type=\"text\"\n                                value={input}\n                                onChange={(e) => setInput(e.target.value)}\n                                placeholder={isLoading ? \"Waiting for response...\" : `Chat with ${selectedCharacter?.name || 'a character'}...`}\n                                disabled={isLoading}\n                                className=\"flex-1 p-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50\"\n                            />\n                            <motion.button\n                                type=\"submit\"\n                                disabled={isLoading || !input.trim()}\n                                whileHover={{ scale: 1.05 }}\n                                whileTap={{ scale: 0.95 }}\n                                className={`p-3 ${selectedCharacter ? getCharacterColor(selectedCharacter.name) : 'bg-blue-600'} text-white rounded-lg hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed`}\n                            >\n                                <PaperAirplaneIcon className=\"w-6 h-6\" />\n                            </motion.button>\n                        </form>\n                    </div>\n                </motion.div>\n            </div>\n        </LayoutGroup>\n    );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}