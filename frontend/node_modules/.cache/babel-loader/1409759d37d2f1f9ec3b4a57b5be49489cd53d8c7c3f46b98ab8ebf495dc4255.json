{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajits\\\\fastapi-react-chatbot\\\\frontend\\\\src\\\\components\\\\MessageBubble.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { messageVariants } from '../styles/variants';\nimport TypingIndicator from './TypingIndicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageBubble = ({\n  message,\n  isUser,\n  isTyping = false,\n  character\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [showTyping, setShowTyping] = useState(isTyping);\n  const [isVisible, setIsVisible] = useState(true);\n  useEffect(() => {\n    if (isTyping) {\n      setShowTyping(true);\n      // Don't update displayText while typing to prevent flickering\n      if (!message.trim()) {\n        setDisplayText('');\n      }\n    } else {\n      setShowTyping(false);\n      // Only update display text when typing is complete\n      if (message !== displayText) {\n        setDisplayText(message);\n      }\n    }\n  }, [message, isTyping]);\n\n  // Handle unmounting animation\n  useEffect(() => {\n    if (!isTyping && !message.trim()) {\n      setIsVisible(false);\n    }\n  }, [isTyping, message]);\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    variants: messageVariants,\n    initial: \"initial\",\n    animate: \"animate\",\n    exit: \"exit\",\n    className: `flex ${isUser ? 'justify-end' : 'justify-start'} mb-4`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-col ${isUser ? 'items-end' : 'items-start'} max-w-[80%]`,\n      children: [!isUser && character && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-gray-400 mb-1 ml-1\",\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        className: `rounded-2xl px-6 py-3 ${isUser ? 'bg-blue-600 text-white' : character ? 'bg-purple-700 text-white' : 'bg-gray-700 text-gray-100'} shadow-lg`,\n        layout: true,\n        children: showTyping && !displayText.trim() ? /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm md:text-base whitespace-pre-wrap break-words leading-relaxed\",\n          children: displayText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(MessageBubble, \"ruoUYYsMPwo1tjUmUdNLceYOVUA=\");\n_c = MessageBubble;\nexport default MessageBubble;\nvar _c;\n$RefreshReg$(_c, \"MessageBubble\");","map":{"version":3,"names":["React","useEffect","useState","motion","messageVariants","TypingIndicator","jsxDEV","_jsxDEV","MessageBubble","message","isUser","isTyping","character","_s","displayText","setDisplayText","showTyping","setShowTyping","isVisible","setIsVisible","trim","div","variants","initial","animate","exit","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","layout","_c","$RefreshReg$"],"sources":["C:/Users/ajits/fastapi-react-chatbot/frontend/src/components/MessageBubble.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { messageVariants } from '../styles/variants';\r\nimport TypingIndicator from './TypingIndicator';\r\n\r\ninterface Character {\r\n    id: number;\r\n    name: string;\r\n    movie: string;\r\n}\r\n\r\ninterface MessageBubbleProps {\r\n    message: string;\r\n    isUser: boolean;\r\n    isTyping?: boolean;\r\n    character?: Character;\r\n}\r\n\r\nconst MessageBubble: React.FC<MessageBubbleProps> = ({ message, isUser, isTyping = false, character }) => {\r\n    const [displayText, setDisplayText] = useState('');\r\n    const [showTyping, setShowTyping] = useState(isTyping);\r\n    const [isVisible, setIsVisible] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (isTyping) {\r\n            setShowTyping(true);\r\n            // Don't update displayText while typing to prevent flickering\r\n            if (!message.trim()) {\r\n                setDisplayText('');\r\n            }\r\n        } else {\r\n            setShowTyping(false);\r\n            // Only update display text when typing is complete\r\n            if (message !== displayText) {\r\n                setDisplayText(message);\r\n            }\r\n        }\r\n    }, [message, isTyping]);\r\n\r\n    // Handle unmounting animation\r\n    useEffect(() => {\r\n        if (!isTyping && !message.trim()) {\r\n            setIsVisible(false);\r\n        }\r\n    }, [isTyping, message]);\r\n\r\n    if (!isVisible) return null;\r\n\r\n    return (\r\n        <motion.div\r\n            variants={messageVariants}\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            exit=\"exit\"\r\n            className={`flex ${isUser ? 'justify-end' : 'justify-start'} mb-4`}\r\n        >\r\n            <div className={`flex flex-col ${isUser ? 'items-end' : 'items-start'} max-w-[80%]`}>\r\n                {!isUser && character && (\r\n                    <span className=\"text-sm text-gray-400 mb-1 ml-1\">\r\n                        {character.name}\r\n                    </span>\r\n                )}\r\n                <motion.div\r\n                    className={`rounded-2xl px-6 py-3 ${\r\n                        isUser\r\n                            ? 'bg-blue-600 text-white'\r\n                            : character \r\n                                ? 'bg-purple-700 text-white'\r\n                                : 'bg-gray-700 text-gray-100'\r\n                    } shadow-lg`}\r\n                    layout\r\n                >\r\n                    {showTyping && !displayText.trim() ? (\r\n                        <TypingIndicator />\r\n                    ) : (\r\n                        <p className=\"text-sm md:text-base whitespace-pre-wrap break-words leading-relaxed\">\r\n                            {displayText}\r\n                        </p>\r\n                    )}\r\n                </motion.div>\r\n            </div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default MessageBubble;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}