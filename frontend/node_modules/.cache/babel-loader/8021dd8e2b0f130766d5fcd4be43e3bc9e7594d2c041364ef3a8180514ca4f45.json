{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajits\\\\fastapi-react-chatbot\\\\frontend\\\\src\\\\components\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion, AnimatePresence, LazyMotion, domAnimation } from 'framer-motion';\nimport axios from 'axios';\nimport { PaperAirplaneIcon, Bars3Icon, UserCircleIcon, ArrowLeftOnRectangleIcon, Cog6ToothIcon, UserGroupIcon, MicrophoneIcon, SpeakerWaveIcon, SpeakerXMarkIcon, ChatBubbleLeftIcon } from '@heroicons/react/24/solid';\nimport { CharacterSelect } from './CharacterSelect';\nimport { dropdownVariants } from '../styles/variants';\nimport { fetchCharacters, streamMessage, fetchChatMessages, fetchChatSessions } from '../services/api';\nimport { logout, getCurrentUser } from '../services/auth';\nimport { useSpeech } from '../hooks/useSpeech';\nimport MessageList from './MessageList';\nimport { useNavigate } from 'react-router-dom';\n\n// Using Character interface imported from API service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [characters, setCharacters] = useState([]);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const [chatSessions, setChatSessions] = useState([]);\n  const [selectedChatSession, setSelectedChatSession] = useState(null);\n  const [isCharacterSelectOpen, setIsCharacterSelectOpen] = useState(false);\n  const [isSpeechEnabled, setIsSpeechEnabled] = useState(true);\n  const [isLoadingHistory, setIsLoadingHistory] = useState(false);\n  const navigate = useNavigate();\n\n  // Add authentication error handler\n  const handleAuthError = useCallback(() => {\n    logout();\n    navigate('/');\n  }, [navigate]);\n  const {\n    startListening,\n    stopListening,\n    speak,\n    isListening,\n    isSpeaking,\n    error: speechError\n  } = useSpeech({\n    onSpeechResult: text => {\n      setInput(text);\n      // Auto-send message when received from speech\n      handleSendMessage(new Event('submit'));\n    },\n    onSpeechEnd: () => {\n      // Handle any cleanup needed when speech recognition ends\n    }\n  });\n  const messagesEndRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const userMenuRef = useRef(null);\n  const scrollToBottom = useCallback(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, []);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const user = await getCurrentUser();\n        if (!user) {\n          handleAuthError();\n          return;\n        }\n      } catch (error) {\n        handleAuthError();\n      }\n    };\n    checkAuth();\n    loadCharacters();\n    loadChatSessions();\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsDropdownOpen(false);\n      }\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\n        setIsUserMenuOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [handleAuthError]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isLoading, scrollToBottom]);\n  const loadCharacters = async () => {\n    try {\n      const data = await fetchCharacters();\n      setCharacters(data);\n    } catch (error) {\n      var _error$response;\n      if (axios.isAxiosError(error) && ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        handleAuthError();\n      } else {\n        setError('Failed to load characters');\n        console.error('Error fetching characters:', error);\n      }\n    }\n  };\n  const loadChatSessions = async () => {\n    try {\n      const sessions = await fetchChatSessions();\n      setChatSessions(sessions);\n    } catch (error) {\n      var _error$response2;\n      console.error('Error loading chat sessions:', error);\n      if (axios.isAxiosError(error) && ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        handleAuthError();\n      } else {\n        setError('Failed to load chat history');\n      }\n    }\n  };\n  const loadChatMessages = async sessionId => {\n    // Prevent loading if already loading this chat\n    if (isLoadingHistory || sessionId === selectedChatSession) return;\n    try {\n      setIsLoadingHistory(true);\n      setError(null);\n      const chatMessages = await fetchChatMessages(sessionId);\n      if (!chatMessages || !Array.isArray(chatMessages)) {\n        throw new Error('Invalid chat history format');\n      }\n\n      // Format messages and set them all at once\n      const formattedMessages = chatMessages.map(msg => ({\n        id: msg.id.toString(),\n        text: msg.message,\n        isUser: !msg.is_bot,\n        character: characters.find(c => c.id === msg.character_id),\n        timestamp: new Date(msg.timestamp)\n      }));\n      setMessages(formattedMessages);\n      setSelectedChatSession(sessionId);\n\n      // Set character if it exists in the messages\n      const botMessage = chatMessages.find(msg => msg.character_id);\n      if (botMessage) {\n        const character = characters.find(c => c.id === botMessage.character_id);\n        if (character) setSelectedCharacter(character);\n      }\n\n      // Scroll to bottom after messages are loaded\n      setTimeout(scrollToBottom, 100);\n    } catch (error) {\n      var _response;\n      console.error('Error loading chat messages:', error);\n      setError('Failed to load chat messages. Please try again.');\n      setMessages([]); // Clear messages on error\n      if ((error === null || error === void 0 ? void 0 : (_response = error.response) === null || _response === void 0 ? void 0 : _response.status) === 401) {\n        window.location.href = '/';\n      }\n    } finally {\n      setIsLoadingHistory(false);\n    }\n  };\n  const handleLogout = () => {\n    logout();\n  };\n  const handleSettings = () => {\n    console.log('Opening settings...');\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (input.trim() && !isLoading) {\n      const userMessageId = Date.now().toString();\n      const userMessage = {\n        text: input,\n        isUser: true,\n        id: userMessageId,\n        character: selectedCharacter || undefined,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, userMessage]);\n      setInput('');\n      setIsLoading(true);\n      setError(null);\n      try {\n        const botMessageId = (Date.now() + 1).toString();\n        let fullResponse = '';\n        setMessages(prev => [...prev, {\n          text: '',\n          isUser: false,\n          id: botMessageId,\n          isStreaming: true,\n          character: selectedCharacter || undefined,\n          timestamp: new Date()\n        }]);\n        await streamMessage({\n          message: input,\n          character_id: selectedCharacter === null || selectedCharacter === void 0 ? void 0 : selectedCharacter.id,\n          chat_session: selectedChatSession || undefined,\n          timestamp: new Date().toISOString()\n        }, data => {\n          if (data.error) {\n            setError(data.error);\n            setMessages(prev => prev.filter(msg => msg.id !== botMessageId));\n            setIsLoading(false);\n            if (data.error.includes('authenticated')) {\n              window.location.href = '/';\n            }\n          } else {\n            fullResponse += data.text || '';\n            setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n              ...msg,\n              text: fullResponse,\n              isStreaming: !data.done\n            } : msg));\n            if (data.done) {\n              setIsLoading(false);\n              if (data.chat_session) {\n                setSelectedChatSession(data.chat_session);\n                loadChatSessions(); // Refresh the chat list\n              }\n              if (isSpeechEnabled && fullResponse) {\n                speak(fullResponse);\n              }\n            }\n            scrollToBottom();\n          }\n        });\n      } catch (error) {\n        var _response2;\n        const errorMessage = error instanceof Error ? error.message : 'Failed to send message';\n        setError(errorMessage);\n        setIsLoading(false);\n        if ((error === null || error === void 0 ? void 0 : (_response2 = error.response) === null || _response2 === void 0 ? void 0 : _response2.status) === 401) {\n          window.location.href = '/';\n        }\n      }\n    }\n  };\n  const handleCharacterSelect = async character => {\n    // Clear any existing chat state\n    setMessages([]);\n    setSelectedChatSession(null);\n    setInput('');\n    setError(null);\n    setIsLoading(false);\n\n    // Set the new character\n    setSelectedCharacter(character);\n    setIsCharacterSelectOpen(false);\n  };\n  const startNewChat = () => {\n    // Clear messages and selected chat session\n    setMessages([]);\n    setSelectedChatSession(null);\n\n    // If a character is selected, show their welcome message\n    if (selectedCharacter) {\n      setMessages([{\n        id: 'welcome',\n        text: selectedCharacter.id === 0 ? \"Starting a new chat. How can I help you?\" : `Starting a new chat with ${selectedCharacter.name}. How can I assist you?`,\n        isUser: false,\n        character: selectedCharacter,\n        timestamp: new Date()\n      }]);\n    }\n  };\n  const handleSidebarChat = async sessionId => {\n    if (selectedChatSession === sessionId) return;\n    await loadChatMessages(sessionId);\n  };\n  const handleNewChat = () => {\n    startNewChat();\n    setIsSidebarOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(LazyMotion, {\n    features: domAnimation,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen bg-gray-900\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          x: isSidebarOpen ? 0 : -320\n        },\n        animate: {\n          x: isSidebarOpen ? 0 : -320\n        },\n        transition: {\n          type: \"spring\",\n          stiffness: 300,\n          damping: 30\n        },\n        className: \"w-80 bg-gray-800 border-r border-gray-700 flex flex-col h-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNewChat,\n            className: \"w-full py-3 px-4 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors duration-200 flex items-center justify-center gap-2 font-medium\",\n            children: [/*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this), \"New Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 space-y-2\",\n            children: chatSessions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-8\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-400\",\n                children: \"No chat history\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 33\n            }, this) : chatSessions.map(session => /*#__PURE__*/_jsxDEV(motion.button, {\n              onClick: () => handleSidebarChat(session.chat_session),\n              className: `w-full p-3 rounded-lg text-left transition-all duration-200 group ${selectedChatSession === session.chat_session ? 'bg-gray-600/50 hover:bg-gray-600' : 'hover:bg-gray-700'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start gap-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `flex-shrink-0 w-4 h-4 mt-1 ${selectedChatSession === session.chat_session ? 'text-white' : 'text-gray-400'}`,\n                  children: /*#__PURE__*/_jsxDEV(ChatBubbleLeftIcon, {\n                    className: \"w-4 h-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1 min-w-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-sm font-medium text-gray-200 truncate group-hover:text-white\",\n                    children: session.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-400 truncate mt-1\",\n                    children: session.last_message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n                  className: \"text-xs text-gray-500 flex-shrink-0\",\n                  children: new Date(session.timestamp).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 41\n              }, this)\n            }, session.chat_session, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-16 border-b border-gray-700 flex items-center justify-between px-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsSidebarOpen(!isSidebarOpen),\n            className: \"p-2 hover:bg-gray-700 rounded-lg transition-colors duration-200\",\n            children: /*#__PURE__*/_jsxDEV(Bars3Icon, {\n              className: \"w-6 h-6 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCharacterSelectOpen(true),\n            className: \"flex items-center space-x-2 p-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors duration-200 text-white\",\n            children: [/*#__PURE__*/_jsxDEV(UserGroupIcon, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedCharacter ? selectedCharacter.name : 'Select Character'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            ref: userMenuRef,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsUserMenuOpen(!isUserMenuOpen),\n              className: \"p-2 hover:bg-gray-700 rounded-full transition-colors duration-200\",\n              children: /*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                className: \"w-8 h-8 text-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n              children: isUserMenuOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n                variants: dropdownVariants,\n                initial: \"hidden\",\n                animate: \"visible\",\n                exit: \"hidden\",\n                className: \"absolute right-0 mt-2 w-48 bg-gray-700 rounded-lg shadow-xl z-10\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"py-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleSettings,\n                    className: \"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(Cog6ToothIcon, {\n                      className: \"w-5 h-5 mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 49\n                    }, this), \"Settings\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleLogout,\n                    className: \"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(ArrowLeftOnRectangleIcon, {\n                      className: \"w-5 h-5 mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 49\n                    }, this), \"Logout\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-4\",\n          children: isLoadingHistory ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center items-center h-full\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(MessageList, {\n              messages: messages,\n              isLoading: isLoading,\n              error: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(motion.button, {\n                type: \"button\",\n                whileHover: {\n                  scale: 1.05\n                },\n                whileTap: {\n                  scale: 0.95\n                },\n                onClick: () => {\n                  if (isListening) {\n                    stopListening();\n                  } else {\n                    startListening();\n                  }\n                },\n                className: `p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${isListening ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                children: /*#__PURE__*/_jsxDEV(MicrophoneIcon, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n                type: \"button\",\n                whileHover: {\n                  scale: 1.05\n                },\n                whileTap: {\n                  scale: 0.95\n                },\n                onClick: () => setIsSpeechEnabled(!isSpeechEnabled),\n                className: `p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${isSpeechEnabled ? 'bg-purple-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                children: isSpeechEnabled ? /*#__PURE__*/_jsxDEV(SpeakerWaveIcon, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(SpeakerXMarkIcon, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: isListening ? 'Listening...' : 'Type your message...',\n              className: \"flex-1 p-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n              type: \"submit\",\n              whileHover: {\n                scale: 1.05\n              },\n              whileTap: {\n                scale: 0.95\n              },\n              disabled: isLoading || !input.trim(),\n              className: \"p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\",\n              children: /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CharacterSelect, {\n      isOpen: isCharacterSelectOpen,\n      onCharacterSelect: handleCharacterSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"MeY0wh0b0vPzIqT8SKOR39O9j1A=\", false, function () {\n  return [useNavigate, useSpeech];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","AnimatePresence","LazyMotion","domAnimation","axios","PaperAirplaneIcon","Bars3Icon","UserCircleIcon","ArrowLeftOnRectangleIcon","Cog6ToothIcon","UserGroupIcon","MicrophoneIcon","SpeakerWaveIcon","SpeakerXMarkIcon","ChatBubbleLeftIcon","CharacterSelect","dropdownVariants","fetchCharacters","streamMessage","fetchChatMessages","fetchChatSessions","logout","getCurrentUser","useSpeech","MessageList","useNavigate","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","characters","setCharacters","selectedCharacter","setSelectedCharacter","isDropdownOpen","setIsDropdownOpen","isLoading","setIsLoading","error","setError","isSidebarOpen","setIsSidebarOpen","isUserMenuOpen","setIsUserMenuOpen","chatSessions","setChatSessions","selectedChatSession","setSelectedChatSession","isCharacterSelectOpen","setIsCharacterSelectOpen","isSpeechEnabled","setIsSpeechEnabled","isLoadingHistory","setIsLoadingHistory","navigate","handleAuthError","startListening","stopListening","speak","isListening","isSpeaking","speechError","onSpeechResult","text","handleSendMessage","Event","onSpeechEnd","messagesEndRef","dropdownRef","userMenuRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","checkAuth","user","loadCharacters","loadChatSessions","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","data","_error$response","isAxiosError","response","status","console","sessions","_error$response2","loadChatMessages","sessionId","chatMessages","Array","isArray","Error","formattedMessages","map","msg","id","toString","message","isUser","is_bot","character","find","c","character_id","timestamp","Date","botMessage","setTimeout","_response","window","location","href","handleLogout","handleSettings","log","e","preventDefault","trim","userMessageId","now","userMessage","undefined","prev","botMessageId","fullResponse","isStreaming","chat_session","toISOString","filter","includes","done","_response2","errorMessage","handleCharacterSelect","startNewChat","name","handleSidebarChat","handleNewChat","features","children","className","div","initial","x","animate","transition","type","stiffness","damping","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","session","button","title","last_message","toLocaleDateString","ref","variants","exit","onSubmit","whileHover","scale","whileTap","value","onChange","placeholder","disabled","isOpen","onCharacterSelect","_c","$RefreshReg$"],"sources":["C:/Users/ajits/fastapi-react-chatbot/frontend/src/components/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion, AnimatePresence, LazyMotion, domAnimation } from 'framer-motion';\nimport axios from 'axios';\nimport { \n    PaperAirplaneIcon, \n    ChevronDownIcon,\n    Bars3Icon,\n    UserCircleIcon,\n    ArrowLeftOnRectangleIcon,\n    Cog6ToothIcon,\n    UserGroupIcon,\n    MicrophoneIcon,\n    SpeakerWaveIcon,\n    SpeakerXMarkIcon,\n    ChatBubbleLeftIcon\n} from '@heroicons/react/24/solid';\nimport MessageBubble from './MessageBubble';\nimport TypingIndicator from './TypingIndicator';\nimport VoiceIndicator from './VoiceIndicator';\nimport { CharacterSelect } from './CharacterSelect';\nimport { containerVariants, dropdownVariants } from '../styles/variants';\nimport { fetchCharacters, streamMessage, fetchChatMessages, fetchChatSessions, StreamResponse, ChatSession } from '../services/api';\nimport { Character } from '../services/api';\nimport { logout, getCurrentUser } from '../services/auth';\nimport { useSpeech } from '../hooks/useSpeech';\nimport MessageList from './MessageList';\nimport { useNavigate } from 'react-router-dom';\n\n// Using Character interface imported from API service\n\ninterface Message {\n    text: string;\n    isUser: boolean;\n    id: string;\n    isStreaming?: boolean;\n    character?: Character;\n    timestamp?: Date;\n    fadeOut?: boolean;\n    fadeIn?: boolean;\n}\n\nconst Chat: React.FC = () => {\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [input, setInput] = useState<string>('');\n    const [characters, setCharacters] = useState<Character[]>([]);\n    const [selectedCharacter, setSelectedCharacter] = useState<Character | null>(null);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n    const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n    const [chatSessions, setChatSessions] = useState<ChatSession[]>([]);\n    const [selectedChatSession, setSelectedChatSession] = useState<string | null>(null);\n    const [isCharacterSelectOpen, setIsCharacterSelectOpen] = useState(false);\n    const [isSpeechEnabled, setIsSpeechEnabled] = useState(true);\n    const [isLoadingHistory, setIsLoadingHistory] = useState(false);\n\n    const navigate = useNavigate();\n\n    // Add authentication error handler\n    const handleAuthError = useCallback(() => {\n        logout();\n        navigate('/');\n    }, [navigate]);\n\n    const {\n        startListening,\n        stopListening,\n        speak,\n        isListening,\n        isSpeaking,\n        error: speechError\n    } = useSpeech({\n        onSpeechResult: (text) => {\n            setInput(text);\n            // Auto-send message when received from speech\n            handleSendMessage(new Event('submit') as any);\n        },\n        onSpeechEnd: () => {\n            // Handle any cleanup needed when speech recognition ends\n        }\n    });\n\n    const messagesEndRef = useRef<HTMLDivElement>(null);\n    const dropdownRef = useRef<HTMLDivElement>(null);\n    const userMenuRef = useRef<HTMLDivElement>(null);\n\n    const scrollToBottom = useCallback(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }, []);\n\n    useEffect(() => {\n        const checkAuth = async () => {\n            try {\n                const user = await getCurrentUser();\n                if (!user) {\n                    handleAuthError();\n                    return;\n                }\n            } catch (error) {\n                handleAuthError();\n            }\n        };\n\n        checkAuth();\n        loadCharacters();\n        loadChatSessions();\n\n        const handleClickOutside = (event: MouseEvent) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n                setIsDropdownOpen(false);\n            }\n            if (userMenuRef.current && !userMenuRef.current.contains(event.target as Node)) {\n                setIsUserMenuOpen(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, [handleAuthError]);\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages, isLoading, scrollToBottom]);\n\n    const loadCharacters = async () => {\n        try {\n            const data = await fetchCharacters();\n            setCharacters(data);\n        } catch (error) {\n            if (axios.isAxiosError(error) && error.response?.status === 401) {\n                handleAuthError();\n            } else {\n                setError('Failed to load characters');\n                console.error('Error fetching characters:', error);\n            }\n        }\n    };\n\n    const loadChatSessions = async () => {\n        try {\n            const sessions = await fetchChatSessions();\n            setChatSessions(sessions);\n        } catch (error) {\n            console.error('Error loading chat sessions:', error);\n            if (axios.isAxiosError(error) && error.response?.status === 401) {\n                handleAuthError();\n            } else {\n                setError('Failed to load chat history');\n            }\n        }\n    };\n\n    const loadChatMessages = async (sessionId: string) => {\n        // Prevent loading if already loading this chat\n        if (isLoadingHistory || sessionId === selectedChatSession) return;\n        \n        try {\n            setIsLoadingHistory(true);\n            setError(null);\n            \n            const chatMessages = await fetchChatMessages(sessionId);\n            \n            if (!chatMessages || !Array.isArray(chatMessages)) {\n                throw new Error('Invalid chat history format');\n            }\n\n            // Format messages and set them all at once\n            const formattedMessages: Message[] = chatMessages.map((msg) => ({\n                id: msg.id.toString(),\n                text: msg.message,\n                isUser: !msg.is_bot,\n                character: characters.find(c => c.id === msg.character_id),\n                timestamp: new Date(msg.timestamp)\n            }));\n\n            setMessages(formattedMessages);\n            setSelectedChatSession(sessionId);\n            \n            // Set character if it exists in the messages\n            const botMessage = chatMessages.find(msg => msg.character_id);\n            if (botMessage) {\n                const character = characters.find(c => c.id === botMessage.character_id);\n                if (character) setSelectedCharacter(character);\n            }\n\n            // Scroll to bottom after messages are loaded\n            setTimeout(scrollToBottom, 100);\n        } catch (error) {\n            console.error('Error loading chat messages:', error);\n            setError('Failed to load chat messages. Please try again.');\n            setMessages([]); // Clear messages on error\n            if ((error as any)?.response?.status === 401) {\n                window.location.href = '/';\n            }\n        } finally {\n            setIsLoadingHistory(false);\n        }\n    };\n\n    const handleLogout = () => {\n        logout();\n    };\n\n    const handleSettings = () => {\n        console.log('Opening settings...');\n    };\n\n    const handleSendMessage = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (input.trim() && !isLoading) {\n            const userMessageId = Date.now().toString();\n            const userMessage = { \n                text: input, \n                isUser: true, \n                id: userMessageId,\n                character: selectedCharacter || undefined,\n                timestamp: new Date()\n            };\n            \n            setMessages(prev => [...prev, userMessage]);\n            setInput('');\n            setIsLoading(true);\n            setError(null);\n            \n            try {\n                const botMessageId = (Date.now() + 1).toString();\n                let fullResponse = '';\n                \n                setMessages(prev => [...prev, { \n                    text: '', \n                    isUser: false, \n                    id: botMessageId,\n                    isStreaming: true,\n                    character: selectedCharacter || undefined,\n                    timestamp: new Date()\n                }]);\n\n                await streamMessage(\n                    {\n                        message: input,\n                        character_id: selectedCharacter?.id,\n                        chat_session: selectedChatSession || undefined,\n                        timestamp: new Date().toISOString()\n                    },\n                    (data: StreamResponse) => {\n                        if (data.error) {\n                            setError(data.error);\n                            setMessages(prev => prev.filter(msg => msg.id !== botMessageId));\n                            setIsLoading(false);\n                            if (data.error.includes('authenticated')) {\n                                window.location.href = '/';\n                            }\n                        } else {\n                            fullResponse += data.text || '';\n                            setMessages(prev => prev.map(msg => \n                                msg.id === botMessageId \n                                    ? { \n                                        ...msg, \n                                        text: fullResponse,\n                                        isStreaming: !data.done \n                                    }\n                                    : msg\n                            ));\n\n                            if (data.done) {\n                                setIsLoading(false);\n                                if (data.chat_session) {\n                                    setSelectedChatSession(data.chat_session);\n                                    loadChatSessions(); // Refresh the chat list\n                                }\n                                if (isSpeechEnabled && fullResponse) {\n                                    speak(fullResponse);\n                                }\n                            }\n                            scrollToBottom();\n                        }\n                    }\n                );\n            } catch (error) {\n                const errorMessage = error instanceof Error ? error.message : 'Failed to send message';\n                setError(errorMessage);\n                setIsLoading(false);\n                if ((error as any)?.response?.status === 401) {\n                    window.location.href = '/';\n                }\n            }\n        }\n    };\n\n    const handleCharacterSelect = async (character: Character) => {\n        // Clear any existing chat state\n        setMessages([]);\n        setSelectedChatSession(null);\n        setInput('');\n        setError(null);\n        setIsLoading(false);\n        \n        // Set the new character\n        setSelectedCharacter(character);\n        setIsCharacterSelectOpen(false);\n    };\n\n    const startNewChat = () => {\n        // Clear messages and selected chat session\n        setMessages([]);\n        setSelectedChatSession(null);\n        \n        // If a character is selected, show their welcome message\n        if (selectedCharacter) {\n            setMessages([{\n                id: 'welcome',\n                text: selectedCharacter.id === 0 \n                    ? \"Starting a new chat. How can I help you?\"\n                    : `Starting a new chat with ${selectedCharacter.name}. How can I assist you?`,\n                isUser: false,\n                character: selectedCharacter,\n                timestamp: new Date()\n            }]);\n        }\n    };\n\n    const handleSidebarChat = async (sessionId: string) => {\n        if (selectedChatSession === sessionId) return;\n        await loadChatMessages(sessionId);\n    };\n\n    const handleNewChat = () => {\n        startNewChat();\n        setIsSidebarOpen(true);\n    };\n\n    return (\n        <LazyMotion features={domAnimation}>\n            <div className=\"flex h-screen bg-gray-900\">\n                {/* Chat History Sidebar */}\n                <motion.div \n                    initial={{ x: isSidebarOpen ? 0 : -320 }}\n                    animate={{ x: isSidebarOpen ? 0 : -320 }}\n                    transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                    className=\"w-80 bg-gray-800 border-r border-gray-700 flex flex-col h-screen\"\n                >\n                    <div className=\"p-4 border-b border-gray-700\">\n                        <button\n                            onClick={handleNewChat}\n                            className=\"w-full py-3 px-4 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors duration-200 flex items-center justify-center gap-2 font-medium\"\n                        >\n                            <PaperAirplaneIcon className=\"w-5 h-5\" />\n                            New Chat\n                        </button>\n                    </div>\n                    <div className=\"flex-1 overflow-y-auto\">\n                        <div className=\"p-2 space-y-2\">\n                            {chatSessions.length === 0 ? (\n                                <div className=\"text-center py-8\">\n                                    <p className=\"text-gray-400\">No chat history</p>\n                                </div>\n                            ) : (\n                                chatSessions.map((session) => (\n                                    <motion.button\n                                        key={session.chat_session}\n                                        onClick={() => handleSidebarChat(session.chat_session)}\n                                        className={`w-full p-3 rounded-lg text-left transition-all duration-200 group ${\n                                            selectedChatSession === session.chat_session \n                                                ? 'bg-gray-600/50 hover:bg-gray-600' \n                                                : 'hover:bg-gray-700'\n                                        }`}\n                                    >\n                                        <div className=\"flex items-start gap-3\">\n                                            <div className={`flex-shrink-0 w-4 h-4 mt-1 ${\n                                                selectedChatSession === session.chat_session ? 'text-white' : 'text-gray-400'\n                                            }`}>\n                                                <ChatBubbleLeftIcon className=\"w-4 h-4\" />\n                                            </div>\n                                            <div className=\"flex-1 min-w-0\">\n                                                <h3 className=\"text-sm font-medium text-gray-200 truncate group-hover:text-white\">\n                                                    {session.title}\n                                                </h3>\n                                                <p className=\"text-xs text-gray-400 truncate mt-1\">\n                                                    {session.last_message}\n                                                </p>\n                                            </div>\n                                            <time className=\"text-xs text-gray-500 flex-shrink-0\">\n                                                {new Date(session.timestamp).toLocaleDateString()}\n                                            </time>\n                                        </div>\n                                    </motion.button>\n                                ))\n                            )}\n                        </div>\n                    </div>\n                </motion.div>\n\n                {/* Rest of the chat interface */}\n                <div className=\"flex-1 flex flex-col\">\n                    <div className=\"h-16 border-b border-gray-700 flex items-center justify-between px-4\">\n                        <button\n                            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n                            className=\"p-2 hover:bg-gray-700 rounded-lg transition-colors duration-200\"\n                        >\n                            <Bars3Icon className=\"w-6 h-6 text-white\" />\n                        </button>\n\n                        <button\n                            onClick={() => setIsCharacterSelectOpen(true)}\n                            className=\"flex items-center space-x-2 p-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors duration-200 text-white\"\n                        >\n                            <UserGroupIcon className=\"w-5 h-5\" />\n                            <span>{selectedCharacter ? selectedCharacter.name : 'Select Character'}</span>\n                        </button>\n\n                        <div className=\"relative\" ref={userMenuRef}>\n                            <button\n                                onClick={() => setIsUserMenuOpen(!isUserMenuOpen)}\n                                className=\"p-2 hover:bg-gray-700 rounded-full transition-colors duration-200\"\n                            >\n                                <UserCircleIcon className=\"w-8 h-8 text-white\" />\n                            </button>\n\n                            <AnimatePresence>\n                                {isUserMenuOpen && (\n                                    <motion.div\n                                        variants={dropdownVariants}\n                                        initial=\"hidden\"\n                                        animate=\"visible\"\n                                        exit=\"hidden\"\n                                        className=\"absolute right-0 mt-2 w-48 bg-gray-700 rounded-lg shadow-xl z-10\"\n                                    >\n                                        <div className=\"py-2\">\n                                            <button\n                                                onClick={handleSettings}\n                                                className=\"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\"\n                                            >\n                                                <Cog6ToothIcon className=\"w-5 h-5 mr-2\" />\n                                                Settings\n                                            </button>\n                                            <button\n                                                onClick={handleLogout}\n                                                className=\"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\"\n                                            >\n                                                <ArrowLeftOnRectangleIcon className=\"w-5 h-5 mr-2\" />\n                                                Logout\n                                            </button>\n                                        </div>\n                                    </motion.div>\n                                )}\n                            </AnimatePresence>\n                        </div>\n                    </div>\n\n                    <div className=\"flex-1 overflow-y-auto p-4\">\n                        {isLoadingHistory ? (\n                            <div className=\"flex justify-center items-center h-full\">\n                                <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"></div>\n                            </div>\n                        ) : (\n                            <div className=\"space-y-4\">\n                                <MessageList \n                                    messages={messages}\n                                    isLoading={isLoading}\n                                    error={error}\n                                />\n                                <div ref={messagesEndRef} />\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"p-4 border-t border-gray-700\">\n                        <form onSubmit={handleSendMessage} className=\"flex gap-2\">\n                            <div className=\"flex gap-2\">\n                                <motion.button\n                                    type=\"button\"\n                                    whileHover={{ scale: 1.05 }}\n                                    whileTap={{ scale: 0.95 }}\n                                    onClick={() => {\n                                        if (isListening) {\n                                            stopListening();\n                                        } else {\n                                            startListening();\n                                        }\n                                    }}\n                                    className={`p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${\n                                        isListening \n                                            ? 'bg-blue-600 text-white' \n                                            : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    }`}\n                                >\n                                    <MicrophoneIcon className=\"w-6 h-6\" />\n                                </motion.button>\n                                <motion.button\n                                    type=\"button\"\n                                    whileHover={{ scale: 1.05 }}\n                                    whileTap={{ scale: 0.95 }}\n                                    onClick={() => setIsSpeechEnabled(!isSpeechEnabled)}\n                                    className={`p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${\n                                        isSpeechEnabled \n                                            ? 'bg-purple-600 text-white' \n                                            : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    }`}\n                                >\n                                    {isSpeechEnabled ? (\n                                        <SpeakerWaveIcon className=\"w-6 h-6\" />\n                                    ) : (\n                                        <SpeakerXMarkIcon className=\"w-6 h-6\" />\n                                    )}\n                                </motion.button>\n                            </div>\n                            <input\n                                type=\"text\"\n                                value={input}\n                                onChange={(e) => setInput(e.target.value)}\n                                placeholder={isListening ? 'Listening...' : 'Type your message...'}\n                                className=\"flex-1 p-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                            />\n                            <motion.button\n                                type=\"submit\"\n                                whileHover={{ scale: 1.05 }}\n                                whileTap={{ scale: 0.95 }}\n                                disabled={isLoading || !input.trim()}\n                                className=\"p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                                <PaperAirplaneIcon className=\"w-6 h-6\" />\n                            </motion.button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n            <CharacterSelect\n                isOpen={isCharacterSelectOpen}\n                onCharacterSelect={handleCharacterSelect}\n            />\n        </LazyMotion>\n    );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}