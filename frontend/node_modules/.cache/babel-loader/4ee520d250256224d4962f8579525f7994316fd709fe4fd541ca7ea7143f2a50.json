{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajits\\\\fastapi-react-chatbot\\\\frontend\\\\src\\\\components\\\\MessageBubble.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { messageVariants } from '../styles/variants';\nimport TypingIndicator from './TypingIndicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageBubble = ({\n  message,\n  isUser,\n  isTyping = false\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [showTyping, setShowTyping] = useState(isTyping);\n  useEffect(() => {\n    if (isTyping) {\n      setShowTyping(true);\n    } else {\n      setDisplayText(message);\n      setShowTyping(false);\n    }\n  }, [message, isTyping]);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    variants: messageVariants,\n    initial: \"initial\",\n    animate: \"animate\",\n    exit: \"exit\",\n    className: `flex ${isUser ? 'justify-end' : 'justify-start'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `max-w-[70%] rounded-2xl px-6 py-3 ${isUser ? 'bg-blue-600 text-white ml-auto' : 'bg-gray-700 text-gray-100'} shadow-lg`,\n      children: showTyping && !message ? /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm md:text-base whitespace-pre-wrap break-words\",\n        children: displayText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(MessageBubble, \"3S/QZLmnsOuY4DpMH8FybiAKDyQ=\");\n_c = MessageBubble;\nexport default MessageBubble;\nvar _c;\n$RefreshReg$(_c, \"MessageBubble\");","map":{"version":3,"names":["React","useEffect","useState","motion","messageVariants","TypingIndicator","jsxDEV","_jsxDEV","MessageBubble","message","isUser","isTyping","_s","displayText","setDisplayText","showTyping","setShowTyping","div","variants","initial","animate","exit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ajits/fastapi-react-chatbot/frontend/src/components/MessageBubble.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { messageVariants } from '../styles/variants';\r\nimport TypingIndicator from './TypingIndicator';\r\n\r\ninterface MessageBubbleProps {\r\n    message: string;\r\n    isUser: boolean;\r\n    isTyping?: boolean;\r\n}\r\n\r\nconst MessageBubble: React.FC<MessageBubbleProps> = ({ message, isUser, isTyping = false }) => {\r\n    const [displayText, setDisplayText] = useState('');\r\n    const [showTyping, setShowTyping] = useState(isTyping);\r\n\r\n    useEffect(() => {\r\n        if (isTyping) {\r\n            setShowTyping(true);\r\n        } else {\r\n            setDisplayText(message);\r\n            setShowTyping(false);\r\n        }\r\n    }, [message, isTyping]);\r\n\r\n    return (\r\n        <motion.div\r\n            variants={messageVariants}\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            exit=\"exit\"\r\n            className={`flex ${isUser ? 'justify-end' : 'justify-start'}`}\r\n        >\r\n            <div\r\n                className={`max-w-[70%] rounded-2xl px-6 py-3 ${\r\n                    isUser\r\n                        ? 'bg-blue-600 text-white ml-auto'\r\n                        : 'bg-gray-700 text-gray-100'\r\n                } shadow-lg`}\r\n            >\r\n                {showTyping && !message ? (\r\n                    <TypingIndicator />\r\n                ) : (\r\n                    <p className=\"text-sm md:text-base whitespace-pre-wrap break-words\">\r\n                        {displayText}\r\n                    </p>\r\n                )}\r\n            </div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default MessageBubble;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,eAAe,QAAQ,oBAAoB;AACpD,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQhD,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,OAAO;EAAEC,MAAM;EAAEC,QAAQ,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC3F,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAACS,QAAQ,CAAC;EAEtDV,SAAS,CAAC,MAAM;IACZ,IAAIU,QAAQ,EAAE;MACVK,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACHF,cAAc,CAACL,OAAO,CAAC;MACvBO,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC,EAAE,CAACP,OAAO,EAAEE,QAAQ,CAAC,CAAC;EAEvB,oBACIJ,OAAA,CAACJ,MAAM,CAACc,GAAG;IACPC,QAAQ,EAAEd,eAAgB;IAC1Be,OAAO,EAAC,SAAS;IACjBC,OAAO,EAAC,SAAS;IACjBC,IAAI,EAAC,MAAM;IACXC,SAAS,EAAE,QAAQZ,MAAM,GAAG,aAAa,GAAG,eAAe,EAAG;IAAAa,QAAA,eAE9DhB,OAAA;MACIe,SAAS,EAAE,qCACPZ,MAAM,GACA,gCAAgC,GAChC,2BAA2B,YACxB;MAAAa,QAAA,EAEZR,UAAU,IAAI,CAACN,OAAO,gBACnBF,OAAA,CAACF,eAAe;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEnBpB,OAAA;QAAGe,SAAS,EAAC,sDAAsD;QAAAC,QAAA,EAC9DV;MAAW;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAErB,CAAC;AAACf,EAAA,CAtCIJ,aAA2C;AAAAoB,EAAA,GAA3CpB,aAA2C;AAwCjD,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}