{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajits\\\\fastapi-react-chatbot\\\\frontend\\\\src\\\\components\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion, AnimatePresence, LazyMotion, domAnimation } from 'framer-motion';\nimport { PaperAirplaneIcon, Bars3Icon, UserCircleIcon, ArrowLeftOnRectangleIcon, Cog6ToothIcon, UserGroupIcon, MicrophoneIcon, SpeakerWaveIcon, SpeakerXMarkIcon } from '@heroicons/react/24/solid';\nimport MessageBubble from './MessageBubble';\nimport TypingIndicator from './TypingIndicator';\nimport VoiceIndicator from './VoiceIndicator';\nimport { CharacterSelect } from './CharacterSelect';\nimport { dropdownVariants } from '../styles/variants';\nimport { fetchCharacters, streamMessage, fetchChatMessages, fetchChatHistory } from '../services/api';\nimport { logout } from '../services/auth';\nimport { useSpeech } from '../hooks/useSpeech';\n\n// Using Character interface imported from API service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [characters, setCharacters] = useState([]);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [isCharacterSelectOpen, setIsCharacterSelectOpen] = useState(false);\n  const [isSpeechEnabled, setIsSpeechEnabled] = useState(true);\n  const {\n    startListening,\n    stopListening,\n    speak,\n    isListening,\n    isSpeaking,\n    error: speechError\n  } = useSpeech({\n    onSpeechResult: text => {\n      setInput(text);\n      // Auto-send message when received from speech\n      handleSendMessage(new Event('submit'));\n    },\n    onSpeechEnd: () => {\n      // Handle any cleanup needed when speech recognition ends\n    }\n  });\n  const messagesEndRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const userMenuRef = useRef(null);\n  const scrollToBottom = useCallback(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, []);\n  useEffect(() => {\n    const defaultAssistant = {\n      id: 0,\n      name: 'AI Assistant',\n      movie: 'Default',\n      chat_style: 'helpful and friendly',\n      example_responses: [],\n      created_at: new Date().toISOString()\n    };\n    setSelectedCharacter(defaultAssistant);\n    setMessages([{\n      id: 'welcome',\n      text: 'How can I help you today?',\n      isUser: false,\n      character: defaultAssistant,\n      timestamp: new Date()\n    }]);\n    loadCharacters();\n    loadAllChatHistory(); // Only load the history list, not the messages\n\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsDropdownOpen(false);\n      }\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\n        setIsUserMenuOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isLoading, scrollToBottom]);\n  const loadCharacters = async () => {\n    try {\n      const data = await fetchCharacters();\n      setCharacters(data);\n    } catch (error) {\n      setError('Failed to load characters');\n      console.error('Error fetching characters:', error);\n    }\n  };\n  const loadAllChatHistory = async () => {\n    try {\n      const userId = 1; // TODO: Get from auth context\n      const history = await fetchChatHistory(userId);\n      setChatHistory(history.map(chat => ({\n        id: chat.id.toString(),\n        title: `Chat ${chat.id}`,\n        lastMessage: chat.last_message || chat.message || 'No messages',\n        timestamp: new Date(chat.timestamp)\n      })));\n    } catch (error) {\n      console.error('Error loading chat history:', error);\n      setError('Failed to load chat history list');\n    }\n  };\n  const loadChatMessages = async chatId => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const chatMessages = await fetchChatMessages(chatId);\n      if (!chatMessages || !Array.isArray(chatMessages)) {\n        throw new Error('Invalid chat history format');\n      }\n      const formattedMessages = chatMessages.map(msg => ({\n        id: msg.id.toString(),\n        text: msg.message,\n        isUser: !msg.is_bot,\n        character: characters.find(c => c.id === msg.character_id),\n        timestamp: new Date(msg.timestamp)\n      }));\n      setMessages(formattedMessages);\n      setSelectedChat(chatId);\n    } catch (error) {\n      console.error('Error loading chat messages:', error);\n      setError('Failed to load chat messages. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    logout();\n  };\n  const handleSettings = () => {\n    console.log('Opening settings...');\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (input.trim() && !isLoading) {\n      const userMessageId = Date.now().toString();\n      const userMessage = {\n        text: input,\n        isUser: true,\n        id: userMessageId,\n        character: selectedCharacter || undefined,\n        timestamp: new Date()\n      };\n      const botMessageId = (Date.now() + 1).toString();\n      setMessages(prev => [...prev, userMessage, {\n        text: '',\n        isUser: false,\n        id: botMessageId,\n        isStreaming: true,\n        character: selectedCharacter || undefined,\n        timestamp: new Date()\n      }]);\n      setInput('');\n      setIsLoading(true);\n      setError(null);\n      try {\n        let fullResponse = '';\n        await streamMessage({\n          message: input,\n          character_id: selectedCharacter === null || selectedCharacter === void 0 ? void 0 : selectedCharacter.id,\n          user_id: 1\n        }, data => {\n          if (data.error) {\n            setError(data.error);\n            setMessages(prev => prev.filter(msg => msg.id !== botMessageId));\n            setIsLoading(false);\n          } else {\n            fullResponse += data.text || '';\n            setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n              ...msg,\n              text: fullResponse,\n              isStreaming: !data.done\n            } : msg));\n            if (data.done) {\n              setIsLoading(false);\n              if (isSpeechEnabled && fullResponse) {\n                speak(fullResponse);\n              }\n            }\n            scrollToBottom();\n          }\n        });\n      } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : 'Failed to send message';\n        setError(errorMessage);\n        console.error('Error sending message:', error);\n        setIsLoading(false);\n      }\n    }\n  };\n  const handleCharacterSelect = async character => {\n    setSelectedCharacter(character);\n    setIsCharacterSelectOpen(false);\n\n    // Clear current messages and show welcome message\n    setMessages([{\n      id: 'welcome',\n      text: character.id === 0 ? \"Switched to AI Assistant. How can I help you?\" : `Switched to ${character.name} from ${character.movie}. How can I assist you?`,\n      isUser: false,\n      character: character,\n      timestamp: new Date()\n    }]);\n\n    // Clear selected chat since we're starting fresh\n    setSelectedChat(null);\n  };\n  return /*#__PURE__*/_jsxDEV(LazyMotion, {\n    features: domAnimation,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen bg-gray-900\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          x: isSidebarOpen ? 0 : -320\n        },\n        animate: {\n          x: isSidebarOpen ? 0 : -320\n        },\n        transition: {\n          type: \"spring\",\n          stiffness: 300,\n          damping: 30\n        },\n        className: \"w-80 bg-gray-800 border-r border-gray-700 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-white\",\n            children: \"Chat History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-4\",\n          children: chatHistory.map(chat => /*#__PURE__*/_jsxDEV(motion.button, {\n            whileHover: {\n              backgroundColor: 'rgba(75, 85, 99, 0.4)'\n            },\n            onClick: () => loadChatMessages(chat.id),\n            className: `w-full p-3 rounded-lg mb-2 text-left ${selectedChat === chat.id ? 'bg-gray-700' : 'hover:bg-gray-700'} transition-colors duration-200`,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-white font-medium\",\n              children: chat.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-400 text-sm truncate\",\n              children: chat.lastMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500 text-xs\",\n              children: chat.timestamp.toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-16 border-b border-gray-700 flex items-center justify-between px-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsSidebarOpen(!isSidebarOpen),\n            className: \"p-2 hover:bg-gray-700 rounded-lg transition-colors duration-200\",\n            children: /*#__PURE__*/_jsxDEV(Bars3Icon, {\n              className: \"w-6 h-6 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCharacterSelectOpen(true),\n            className: \"flex items-center space-x-2 p-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors duration-200 text-white\",\n            children: [/*#__PURE__*/_jsxDEV(UserGroupIcon, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedCharacter ? selectedCharacter.name : 'Select Character'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            ref: userMenuRef,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsUserMenuOpen(!isUserMenuOpen),\n              className: \"p-2 hover:bg-gray-700 rounded-full transition-colors duration-200\",\n              children: /*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                className: \"w-8 h-8 text-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n              children: isUserMenuOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n                variants: dropdownVariants,\n                initial: \"hidden\",\n                animate: \"visible\",\n                exit: \"hidden\",\n                className: \"absolute right-0 mt-2 w-48 bg-gray-700 rounded-lg shadow-xl z-10\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"py-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleSettings,\n                    className: \"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(Cog6ToothIcon, {\n                      className: \"w-5 h-5 mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 49\n                    }, this), \"Settings\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleLogout,\n                    className: \"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(ArrowLeftOnRectangleIcon, {\n                      className: \"w-5 h-5 mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 49\n                    }, this), \"Logout\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n              initial: false,\n              children: messages.map(msg => /*#__PURE__*/_jsxDEV(MessageBubble, {\n                message: msg.text,\n                isUser: msg.isUser,\n                isTyping: msg.isStreaming,\n                character: msg.character\n              }, msg.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 29\n            }, this), (isListening || isSpeaking) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-center\",\n              children: [/*#__PURE__*/_jsxDEV(VoiceIndicator, {\n                isActive: isListening,\n                type: \"listening\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(VoiceIndicator, {\n                isActive: isSpeaking,\n                type: \"speaking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 33\n            }, this), isLoading && !messages.some(msg => msg.isStreaming) && /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0\n              },\n              animate: {\n                opacity: 1\n              },\n              exit: {\n                opacity: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0\n              },\n              animate: {\n                opacity: 1\n              },\n              className: \"text-red-500 text-sm p-2 rounded-lg bg-red-500/10\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(motion.button, {\n                type: \"button\",\n                whileHover: {\n                  scale: 1.05\n                },\n                whileTap: {\n                  scale: 0.95\n                },\n                onClick: () => {\n                  if (isListening) {\n                    stopListening();\n                  } else {\n                    startListening();\n                  }\n                },\n                className: `p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${isListening ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                children: /*#__PURE__*/_jsxDEV(MicrophoneIcon, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n                type: \"button\",\n                whileHover: {\n                  scale: 1.05\n                },\n                whileTap: {\n                  scale: 0.95\n                },\n                onClick: () => setIsSpeechEnabled(!isSpeechEnabled),\n                className: `p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${isSpeechEnabled ? 'bg-purple-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                children: isSpeechEnabled ? /*#__PURE__*/_jsxDEV(SpeakerWaveIcon, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(SpeakerXMarkIcon, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: isListening ? 'Listening...' : 'Type your message...',\n              className: \"flex-1 p-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n              type: \"submit\",\n              whileHover: {\n                scale: 1.05\n              },\n              whileTap: {\n                scale: 0.95\n              },\n              disabled: isLoading || !input.trim(),\n              className: \"p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\",\n              children: /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CharacterSelect, {\n      isOpen: isCharacterSelectOpen,\n      onCharacterSelect: handleCharacterSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"V56utMs64fqvWvz6wthh3NT9psc=\", false, function () {\n  return [useSpeech];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","AnimatePresence","LazyMotion","domAnimation","PaperAirplaneIcon","Bars3Icon","UserCircleIcon","ArrowLeftOnRectangleIcon","Cog6ToothIcon","UserGroupIcon","MicrophoneIcon","SpeakerWaveIcon","SpeakerXMarkIcon","MessageBubble","TypingIndicator","VoiceIndicator","CharacterSelect","dropdownVariants","fetchCharacters","streamMessage","fetchChatMessages","fetchChatHistory","logout","useSpeech","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","characters","setCharacters","selectedCharacter","setSelectedCharacter","isDropdownOpen","setIsDropdownOpen","isLoading","setIsLoading","error","setError","isSidebarOpen","setIsSidebarOpen","isUserMenuOpen","setIsUserMenuOpen","chatHistory","setChatHistory","selectedChat","setSelectedChat","isCharacterSelectOpen","setIsCharacterSelectOpen","isSpeechEnabled","setIsSpeechEnabled","startListening","stopListening","speak","isListening","isSpeaking","speechError","onSpeechResult","text","handleSendMessage","Event","onSpeechEnd","messagesEndRef","dropdownRef","userMenuRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","defaultAssistant","id","name","movie","chat_style","example_responses","created_at","Date","toISOString","isUser","character","timestamp","loadCharacters","loadAllChatHistory","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","data","console","userId","history","map","chat","toString","title","lastMessage","last_message","message","loadChatMessages","chatId","chatMessages","Array","isArray","Error","formattedMessages","msg","is_bot","find","c","character_id","handleLogout","handleSettings","log","e","preventDefault","trim","userMessageId","now","userMessage","undefined","botMessageId","prev","isStreaming","fullResponse","user_id","filter","done","errorMessage","handleCharacterSelect","features","children","className","div","initial","x","animate","transition","type","stiffness","damping","fileName","_jsxFileName","lineNumber","columnNumber","button","whileHover","backgroundColor","onClick","toLocaleDateString","ref","variants","exit","isTyping","isActive","some","opacity","onSubmit","scale","whileTap","value","onChange","placeholder","disabled","isOpen","onCharacterSelect","_c","$RefreshReg$"],"sources":["C:/Users/ajits/fastapi-react-chatbot/frontend/src/components/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion, AnimatePresence, LazyMotion, domAnimation } from 'framer-motion';\nimport { \n    PaperAirplaneIcon, \n    ChevronDownIcon,\n    Bars3Icon,\n    UserCircleIcon,\n    ArrowLeftOnRectangleIcon,\n    Cog6ToothIcon,\n    UserGroupIcon,\n    MicrophoneIcon,\n    SpeakerWaveIcon,\n    SpeakerXMarkIcon\n} from '@heroicons/react/24/solid';\nimport MessageBubble from './MessageBubble';\nimport TypingIndicator from './TypingIndicator';\nimport VoiceIndicator from './VoiceIndicator';\nimport { CharacterSelect } from './CharacterSelect';\nimport { containerVariants, dropdownVariants } from '../styles/variants';\nimport { fetchCharacters, streamMessage, fetchChatMessages, fetchChatHistory, StreamResponse } from '../services/api';\nimport { Character } from '../services/api';\nimport { logout } from '../services/auth';\nimport { useSpeech } from '../hooks/useSpeech';\n\n// Using Character interface imported from API service\n\ninterface Message {\n    text: string;\n    isUser: boolean;\n    id: string;\n    isStreaming?: boolean;\n    character?: Character;\n    timestamp?: Date;\n}\n\ninterface ChatHistory {\n    id: string;\n    title: string;\n    lastMessage: string;\n    timestamp: Date;\n}\n\nconst Chat: React.FC = () => {\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [input, setInput] = useState<string>('');\n    const [characters, setCharacters] = useState<Character[]>([]);\n    const [selectedCharacter, setSelectedCharacter] = useState<Character | null>(null);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n    const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n    const [chatHistory, setChatHistory] = useState<ChatHistory[]>([]);\n    const [selectedChat, setSelectedChat] = useState<string | null>(null);\n    const [isCharacterSelectOpen, setIsCharacterSelectOpen] = useState(false);\n    const [isSpeechEnabled, setIsSpeechEnabled] = useState(true);\n\n    const {\n        startListening,\n        stopListening,\n        speak,\n        isListening,\n        isSpeaking,\n        error: speechError\n    } = useSpeech({\n        onSpeechResult: (text) => {\n            setInput(text);\n            // Auto-send message when received from speech\n            handleSendMessage(new Event('submit') as any);\n        },\n        onSpeechEnd: () => {\n            // Handle any cleanup needed when speech recognition ends\n        }\n    });\n\n    const messagesEndRef = useRef<HTMLDivElement>(null);\n    const dropdownRef = useRef<HTMLDivElement>(null);\n    const userMenuRef = useRef<HTMLDivElement>(null);\n\n    const scrollToBottom = useCallback(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }, []);\n\n    useEffect(() => {\n        const defaultAssistant = {\n            id: 0,\n            name: 'AI Assistant',\n            movie: 'Default',\n            chat_style: 'helpful and friendly',\n            example_responses: [],\n            created_at: new Date().toISOString()\n        };\n        \n        setSelectedCharacter(defaultAssistant);\n        setMessages([{\n            id: 'welcome',\n            text: 'How can I help you today?',\n            isUser: false,\n            character: defaultAssistant,\n            timestamp: new Date()\n        }]);\n\n        loadCharacters();\n        loadAllChatHistory(); // Only load the history list, not the messages\n\n        const handleClickOutside = (event: MouseEvent) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n                setIsDropdownOpen(false);\n            }\n            if (userMenuRef.current && !userMenuRef.current.contains(event.target as Node)) {\n                setIsUserMenuOpen(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages, isLoading, scrollToBottom]);\n\n    const loadCharacters = async () => {\n        try {\n            const data = await fetchCharacters();\n            setCharacters(data);\n        } catch (error) {\n            setError('Failed to load characters');\n            console.error('Error fetching characters:', error);\n        }\n    };\n\n    const loadAllChatHistory = async () => {\n        try {\n            const userId = 1; // TODO: Get from auth context\n            const history = await fetchChatHistory(userId);\n            setChatHistory(history.map(chat => ({\n                id: chat.id.toString(),\n                title: `Chat ${chat.id}`,\n                lastMessage: chat.last_message || chat.message || 'No messages',\n                timestamp: new Date(chat.timestamp)\n            })));\n        } catch (error) {\n            console.error('Error loading chat history:', error);\n            setError('Failed to load chat history list');\n        }\n    };\n\n    const loadChatMessages = async (chatId: string) => {\n        try {\n            setIsLoading(true);\n            setError(null);\n            \n            const chatMessages = await fetchChatMessages(chatId);\n            \n            if (!chatMessages || !Array.isArray(chatMessages)) {\n                throw new Error('Invalid chat history format');\n            }\n\n            const formattedMessages: Message[] = chatMessages.map((msg) => ({\n                id: msg.id.toString(),\n                text: msg.message,\n                isUser: !msg.is_bot,\n                character: characters.find(c => c.id === msg.character_id),\n                timestamp: new Date(msg.timestamp)\n            }));\n\n            setMessages(formattedMessages);\n            setSelectedChat(chatId);\n        } catch (error) {\n            console.error('Error loading chat messages:', error);\n            setError('Failed to load chat messages. Please try again.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleLogout = () => {\n        logout();\n    };\n\n    const handleSettings = () => {\n        console.log('Opening settings...');\n    };\n\n    const handleSendMessage = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (input.trim() && !isLoading) {\n            const userMessageId = Date.now().toString();\n            const userMessage = { \n                text: input, \n                isUser: true, \n                id: userMessageId,\n                character: selectedCharacter || undefined,\n                timestamp: new Date()\n            };\n            const botMessageId = (Date.now() + 1).toString();\n            \n            setMessages(prev => [...prev, userMessage, { \n                text: '', \n                isUser: false, \n                id: botMessageId,\n                isStreaming: true,\n                character: selectedCharacter || undefined,\n                timestamp: new Date()\n            }]);\n            setInput('');\n            setIsLoading(true);\n            setError(null);\n            \n            try {\n                let fullResponse = '';\n                \n                await streamMessage(\n                    {\n                        message: input,\n                        character_id: selectedCharacter?.id,\n                        user_id: 1\n                    },\n                    (data: StreamResponse) => {\n                        if (data.error) {\n                            setError(data.error);\n                            setMessages(prev => prev.filter(msg => msg.id !== botMessageId));\n                            setIsLoading(false);\n                        } else {\n                            fullResponse += data.text || '';\n                            setMessages(prev => prev.map(msg => \n                                msg.id === botMessageId \n                                    ? { \n                                        ...msg, \n                                        text: fullResponse,\n                                        isStreaming: !data.done \n                                    }\n                                    : msg\n                            ));\n\n                            if (data.done) {\n                                setIsLoading(false);\n                                if (isSpeechEnabled && fullResponse) {\n                                    speak(fullResponse);\n                                }\n                            }\n                            scrollToBottom();\n                        }\n                    }\n                );\n            } catch (error) {\n                const errorMessage = error instanceof Error ? error.message : 'Failed to send message';\n                setError(errorMessage);\n                console.error('Error sending message:', error);\n                setIsLoading(false);\n            }\n        }\n    };\n\n    const handleCharacterSelect = async (character: Character) => {\n        setSelectedCharacter(character);\n        setIsCharacterSelectOpen(false);\n        \n        // Clear current messages and show welcome message\n        setMessages([{\n            id: 'welcome',\n            text: character.id === 0 \n                ? \"Switched to AI Assistant. How can I help you?\"\n                : `Switched to ${character.name} from ${character.movie}. How can I assist you?`,\n            isUser: false,\n            character: character,\n            timestamp: new Date()\n        }]);\n        \n        // Clear selected chat since we're starting fresh\n        setSelectedChat(null);\n    };\n\n    return (\n        <LazyMotion features={domAnimation}>\n            <div className=\"flex h-screen bg-gray-900\">\n                <motion.div \n                    initial={{ x: isSidebarOpen ? 0 : -320 }}\n                    animate={{ x: isSidebarOpen ? 0 : -320 }}\n                    transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                    className=\"w-80 bg-gray-800 border-r border-gray-700 flex flex-col\"\n                >\n                    <div className=\"p-4 border-b border-gray-700\">\n                        <h2 className=\"text-xl font-semibold text-white\">Chat History</h2>\n                    </div>\n                    <div className=\"flex-1 overflow-y-auto p-4\">\n                        {chatHistory.map((chat) => (\n                            <motion.button\n                                key={chat.id}\n                                whileHover={{ backgroundColor: 'rgba(75, 85, 99, 0.4)' }}\n                                onClick={() => loadChatMessages(chat.id)}\n                                className={`w-full p-3 rounded-lg mb-2 text-left ${\n                                    selectedChat === chat.id ? 'bg-gray-700' : 'hover:bg-gray-700'\n                                } transition-colors duration-200`}\n                            >\n                                <h3 className=\"text-white font-medium\">{chat.title}</h3>\n                                <p className=\"text-gray-400 text-sm truncate\">{chat.lastMessage}</p>\n                                <span className=\"text-gray-500 text-xs\">\n                                    {chat.timestamp.toLocaleDateString()}\n                                </span>\n                            </motion.button>\n                        ))}\n                    </div>\n                </motion.div>\n\n                <div className=\"flex-1 flex flex-col\">\n                    <div className=\"h-16 border-b border-gray-700 flex items-center justify-between px-4\">\n                        <button\n                            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n                            className=\"p-2 hover:bg-gray-700 rounded-lg transition-colors duration-200\"\n                        >\n                            <Bars3Icon className=\"w-6 h-6 text-white\" />\n                        </button>\n\n                        <button\n                            onClick={() => setIsCharacterSelectOpen(true)}\n                            className=\"flex items-center space-x-2 p-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors duration-200 text-white\"\n                        >\n                            <UserGroupIcon className=\"w-5 h-5\" />\n                            <span>{selectedCharacter ? selectedCharacter.name : 'Select Character'}</span>\n                        </button>\n\n                        <div className=\"relative\" ref={userMenuRef}>\n                            <button\n                                onClick={() => setIsUserMenuOpen(!isUserMenuOpen)}\n                                className=\"p-2 hover:bg-gray-700 rounded-full transition-colors duration-200\"\n                            >\n                                <UserCircleIcon className=\"w-8 h-8 text-white\" />\n                            </button>\n\n                            <AnimatePresence>\n                                {isUserMenuOpen && (\n                                    <motion.div\n                                        variants={dropdownVariants}\n                                        initial=\"hidden\"\n                                        animate=\"visible\"\n                                        exit=\"hidden\"\n                                        className=\"absolute right-0 mt-2 w-48 bg-gray-700 rounded-lg shadow-xl z-10\"\n                                    >\n                                        <div className=\"py-2\">\n                                            <button\n                                                onClick={handleSettings}\n                                                className=\"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\"\n                                            >\n                                                <Cog6ToothIcon className=\"w-5 h-5 mr-2\" />\n                                                Settings\n                                            </button>\n                                            <button\n                                                onClick={handleLogout}\n                                                className=\"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\"\n                                            >\n                                                <ArrowLeftOnRectangleIcon className=\"w-5 h-5 mr-2\" />\n                                                Logout\n                                            </button>\n                                        </div>\n                                    </motion.div>\n                                )}\n                            </AnimatePresence>\n                        </div>\n                    </div>\n\n                    <div className=\"flex-1 overflow-y-auto p-4\">\n                        <div className=\"space-y-4\">\n                            <AnimatePresence initial={false}>\n                                {messages.map((msg) => (\n                                    <MessageBubble\n                                        key={msg.id}\n                                        message={msg.text}\n                                        isUser={msg.isUser}\n                                        isTyping={msg.isStreaming}\n                                        character={msg.character}\n                                    />\n                                ))}\n                            </AnimatePresence>\n                            {(isListening || isSpeaking) && (\n                                <div className=\"flex justify-center\">\n                                    <VoiceIndicator \n                                        isActive={isListening}\n                                        type=\"listening\"\n                                    />\n                                    <VoiceIndicator \n                                        isActive={isSpeaking}\n                                        type=\"speaking\"\n                                    />\n                                </div>\n                            )}\n                            {isLoading && !messages.some(msg => msg.isStreaming) && (\n                                <motion.div\n                                    initial={{ opacity: 0 }}\n                                    animate={{ opacity: 1 }}\n                                    exit={{ opacity: 0 }}\n                                >\n                                    <TypingIndicator />\n                                </motion.div>\n                            )}\n                            {error && (\n                                <motion.div\n                                    initial={{ opacity: 0 }}\n                                    animate={{ opacity: 1 }}\n                                    className=\"text-red-500 text-sm p-2 rounded-lg bg-red-500/10\"\n                                >\n                                    {error}\n                                </motion.div>\n                            )}\n                            <div ref={messagesEndRef} />\n                        </div>\n                    </div>\n\n                    <div className=\"p-4 border-t border-gray-700\">\n                        <form onSubmit={handleSendMessage} className=\"flex gap-2\">\n                            <div className=\"flex gap-2\">\n                                <motion.button\n                                    type=\"button\"\n                                    whileHover={{ scale: 1.05 }}\n                                    whileTap={{ scale: 0.95 }}\n                                    onClick={() => {\n                                        if (isListening) {\n                                            stopListening();\n                                        } else {\n                                            startListening();\n                                        }\n                                    }}\n                                    className={`p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${\n                                        isListening \n                                            ? 'bg-blue-600 text-white' \n                                            : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    }`}\n                                >\n                                    <MicrophoneIcon className=\"w-6 h-6\" />\n                                </motion.button>\n                                <motion.button\n                                    type=\"button\"\n                                    whileHover={{ scale: 1.05 }}\n                                    whileTap={{ scale: 0.95 }}\n                                    onClick={() => setIsSpeechEnabled(!isSpeechEnabled)}\n                                    className={`p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${\n                                        isSpeechEnabled \n                                            ? 'bg-purple-600 text-white' \n                                            : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    }`}\n                                >\n                                    {isSpeechEnabled ? (\n                                        <SpeakerWaveIcon className=\"w-6 h-6\" />\n                                    ) : (\n                                        <SpeakerXMarkIcon className=\"w-6 h-6\" />\n                                    )}\n                                </motion.button>\n                            </div>\n                            <input\n                                type=\"text\"\n                                value={input}\n                                onChange={(e) => setInput(e.target.value)}\n                                placeholder={isListening ? 'Listening...' : 'Type your message...'}\n                                className=\"flex-1 p-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                            />\n                            <motion.button\n                                type=\"submit\"\n                                whileHover={{ scale: 1.05 }}\n                                whileTap={{ scale: 0.95 }}\n                                disabled={isLoading || !input.trim()}\n                                className=\"p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                                <PaperAirplaneIcon className=\"w-6 h-6\" />\n                            </motion.button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n            <CharacterSelect\n                isOpen={isCharacterSelectOpen}\n                onCharacterSelect={handleCharacterSelect}\n            />\n        </LazyMotion>\n    );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}