{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajits\\\\fastapi-react-chatbot\\\\frontend\\\\src\\\\components\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion, AnimatePresence, LazyMotion, domAnimation } from 'framer-motion';\nimport { PaperAirplaneIcon, Bars3Icon, UserCircleIcon, ArrowLeftOnRectangleIcon, Cog6ToothIcon, UserGroupIcon, MicrophoneIcon, SpeakerWaveIcon, SpeakerXMarkIcon, ChatBubbleLeftIcon } from '@heroicons/react/24/solid';\nimport { CharacterSelect } from './CharacterSelect';\nimport { dropdownVariants } from '../styles/variants';\nimport { fetchCharacters, streamMessage, fetchChatMessages, fetchChatHistory } from '../services/api';\nimport { logout } from '../services/auth';\nimport { useSpeech } from '../hooks/useSpeech';\nimport MessageList from './MessageList.tsx';\n\n// Using Character interface imported from API service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [characters, setCharacters] = useState([]);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [isCharacterSelectOpen, setIsCharacterSelectOpen] = useState(false);\n  const [isSpeechEnabled, setIsSpeechEnabled] = useState(true);\n  const [isLoadingHistory, setIsLoadingHistory] = useState(false);\n  const {\n    startListening,\n    stopListening,\n    speak,\n    isListening,\n    isSpeaking,\n    error: speechError\n  } = useSpeech({\n    onSpeechResult: text => {\n      setInput(text);\n      // Auto-send message when received from speech\n      handleSendMessage(new Event('submit'));\n    },\n    onSpeechEnd: () => {\n      // Handle any cleanup needed when speech recognition ends\n    }\n  });\n  const messagesEndRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const userMenuRef = useRef(null);\n  const scrollToBottom = useCallback(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, []);\n  useEffect(() => {\n    // Only load characters and chat history list on mount\n    loadCharacters();\n    loadAllChatHistory();\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsDropdownOpen(false);\n      }\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\n        setIsUserMenuOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isLoading, scrollToBottom]);\n  const loadCharacters = async () => {\n    try {\n      const data = await fetchCharacters();\n      setCharacters(data);\n    } catch (error) {\n      setError('Failed to load characters');\n      console.error('Error fetching characters:', error);\n    }\n  };\n  const loadAllChatHistory = async () => {\n    try {\n      const userId = 1; // TODO: Get from auth context\n      const history = await fetchChatHistory(userId);\n      setChatHistory(history.map(chat => {\n        var _chat$message;\n        return {\n          id: chat.id.toString(),\n          // Use first message or default to \"New Chat\"\n          title: ((_chat$message = chat.message) === null || _chat$message === void 0 ? void 0 : _chat$message.split('\\n')[0]) || \"New Chat\",\n          lastMessage: chat.last_message || chat.message || 'No messages',\n          timestamp: new Date(chat.timestamp)\n        };\n      }));\n    } catch (error) {\n      console.error('Error loading chat history:', error);\n      setError('Failed to load chat history list');\n    }\n  };\n  const loadChatMessages = async chatId => {\n    // Prevent loading if already loading this chat\n    if (isLoadingHistory || chatId === selectedChat) return;\n    try {\n      setIsLoadingHistory(true);\n      setError(null);\n      const chatMessages = await fetchChatMessages(chatId);\n      if (!chatMessages || !Array.isArray(chatMessages)) {\n        throw new Error('Invalid chat history format');\n      }\n\n      // Format messages and set them all at once\n      const formattedMessages = chatMessages.map(msg => ({\n        id: msg.id.toString(),\n        text: msg.message,\n        isUser: !msg.is_bot,\n        character: characters.find(c => c.id === msg.character_id),\n        timestamp: new Date(msg.timestamp)\n      }));\n      setMessages(formattedMessages);\n      setSelectedChat(chatId);\n\n      // Set character if it exists in the messages\n      const botMessage = chatMessages.find(msg => msg.character_id);\n      if (botMessage) {\n        const character = characters.find(c => c.id === botMessage.character_id);\n        if (character) setSelectedCharacter(character);\n      }\n\n      // Scroll to bottom after messages are loaded\n      setTimeout(scrollToBottom, 100);\n    } catch (error) {\n      console.error('Error loading chat messages:', error);\n      setError('Failed to load chat messages. Please try again.');\n      setMessages([]); // Clear messages on error\n    } finally {\n      setIsLoadingHistory(false);\n    }\n  };\n  const handleLogout = () => {\n    logout();\n  };\n  const handleSettings = () => {\n    console.log('Opening settings...');\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (input.trim() && !isLoading) {\n      const userMessageId = Date.now().toString();\n      const userMessage = {\n        text: input,\n        isUser: true,\n        id: userMessageId,\n        character: selectedCharacter || undefined,\n        timestamp: new Date()\n      };\n\n      // Update messages immediately with user message\n      setMessages(prev => [...prev, userMessage]);\n      setInput('');\n      setIsLoading(true);\n      setError(null);\n      try {\n        const botMessageId = (Date.now() + 1).toString();\n        let fullResponse = '';\n\n        // Add empty bot message that will be updated\n        setMessages(prev => [...prev, {\n          text: '',\n          isUser: false,\n          id: botMessageId,\n          isStreaming: true,\n          character: selectedCharacter || undefined,\n          timestamp: new Date()\n        }]);\n        await streamMessage({\n          message: input,\n          character_id: selectedCharacter === null || selectedCharacter === void 0 ? void 0 : selectedCharacter.id,\n          user_id: 1,\n          timestamp: new Date().toISOString(),\n          chat_id: selectedChat || undefined\n        }, data => {\n          if (data.error) {\n            setError(data.error);\n            setMessages(prev => prev.filter(msg => msg.id !== botMessageId));\n            setIsLoading(false);\n          } else {\n            fullResponse += data.text || '';\n            setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n              ...msg,\n              text: fullResponse,\n              isStreaming: !data.done\n            } : msg));\n            if (data.done) {\n              setIsLoading(false);\n              if (isSpeechEnabled && fullResponse) {\n                speak(fullResponse);\n              }\n            }\n            scrollToBottom();\n          }\n        });\n      } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : 'Failed to send message';\n        setError(errorMessage);\n        setIsLoading(false);\n      }\n    }\n  };\n  const handleCharacterSelect = async character => {\n    // Clear any existing chat state\n    setMessages([]);\n    setSelectedChat(null);\n    setInput('');\n    setError(null);\n    setIsLoading(false);\n\n    // Set the new character\n    setSelectedCharacter(character);\n    setIsCharacterSelectOpen(false);\n  };\n  const startNewChat = () => {\n    // Clear messages and selected chat\n    setMessages([]);\n    setSelectedChat(null);\n\n    // If a character is selected, show their welcome message\n    if (selectedCharacter) {\n      setMessages([{\n        id: 'welcome',\n        text: selectedCharacter.id === 0 ? \"Starting a new chat. How can I help you?\" : `Starting a new chat with ${selectedCharacter.name}. How can I assist you?`,\n        isUser: false,\n        character: selectedCharacter,\n        timestamp: new Date()\n      }]);\n    }\n  };\n  const handleSidebarChat = async chatId => {\n    if (selectedChat === chatId) return;\n    await loadChatMessages(chatId);\n  };\n  const handleNewChat = () => {\n    startNewChat();\n    setIsSidebarOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(LazyMotion, {\n    features: domAnimation,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen bg-gray-900\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          x: isSidebarOpen ? 0 : -320\n        },\n        animate: {\n          x: isSidebarOpen ? 0 : -320\n        },\n        transition: {\n          type: \"spring\",\n          stiffness: 300,\n          damping: 30\n        },\n        className: \"w-80 bg-gray-800 border-r border-gray-700 flex flex-col h-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNewChat,\n            className: \"w-full py-3 px-4 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors duration-200 flex items-center justify-center gap-2 font-medium\",\n            children: [/*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), \"New Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 space-y-2\",\n            children: chatHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-8\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-400\",\n                children: \"No chat history\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 33\n            }, this) : chatHistory.map(chat => /*#__PURE__*/_jsxDEV(motion.button, {\n              onClick: () => handleSidebarChat(chat.id),\n              className: `w-full p-3 rounded-lg text-left transition-all duration-200 group ${selectedChat === chat.id ? 'bg-gray-600/50 hover:bg-gray-600' : 'hover:bg-gray-700'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start gap-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `flex-shrink-0 w-4 h-4 mt-1 ${selectedChat === chat.id ? 'text-white' : 'text-gray-400'}`,\n                  children: /*#__PURE__*/_jsxDEV(ChatBubbleLeftIcon, {\n                    className: \"w-4 h-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1 min-w-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-sm font-medium text-gray-200 truncate group-hover:text-white\",\n                    children: chat.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-400 truncate mt-1\",\n                    children: chat.lastMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n                  className: \"text-xs text-gray-500 flex-shrink-0\",\n                  children: chat.timestamp.toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 41\n              }, this)\n            }, chat.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-16 border-b border-gray-700 flex items-center justify-between px-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsSidebarOpen(!isSidebarOpen),\n            className: \"p-2 hover:bg-gray-700 rounded-lg transition-colors duration-200\",\n            children: /*#__PURE__*/_jsxDEV(Bars3Icon, {\n              className: \"w-6 h-6 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCharacterSelectOpen(true),\n            className: \"flex items-center space-x-2 p-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors duration-200 text-white\",\n            children: [/*#__PURE__*/_jsxDEV(UserGroupIcon, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedCharacter ? selectedCharacter.name : 'Select Character'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            ref: userMenuRef,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsUserMenuOpen(!isUserMenuOpen),\n              className: \"p-2 hover:bg-gray-700 rounded-full transition-colors duration-200\",\n              children: /*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                className: \"w-8 h-8 text-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n              children: isUserMenuOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n                variants: dropdownVariants,\n                initial: \"hidden\",\n                animate: \"visible\",\n                exit: \"hidden\",\n                className: \"absolute right-0 mt-2 w-48 bg-gray-700 rounded-lg shadow-xl z-10\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"py-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleSettings,\n                    className: \"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(Cog6ToothIcon, {\n                      className: \"w-5 h-5 mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 49\n                    }, this), \"Settings\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleLogout,\n                    className: \"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(ArrowLeftOnRectangleIcon, {\n                      className: \"w-5 h-5 mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 49\n                    }, this), \"Logout\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-4\",\n          children: isLoadingHistory ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center items-center h-full\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(MessageList, {\n              messages: messages,\n              isLoading: isLoading,\n              error: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(motion.button, {\n                type: \"button\",\n                whileHover: {\n                  scale: 1.05\n                },\n                whileTap: {\n                  scale: 0.95\n                },\n                onClick: () => {\n                  if (isListening) {\n                    stopListening();\n                  } else {\n                    startListening();\n                  }\n                },\n                className: `p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${isListening ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                children: /*#__PURE__*/_jsxDEV(MicrophoneIcon, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n                type: \"button\",\n                whileHover: {\n                  scale: 1.05\n                },\n                whileTap: {\n                  scale: 0.95\n                },\n                onClick: () => setIsSpeechEnabled(!isSpeechEnabled),\n                className: `p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${isSpeechEnabled ? 'bg-purple-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                children: isSpeechEnabled ? /*#__PURE__*/_jsxDEV(SpeakerWaveIcon, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(SpeakerXMarkIcon, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: isListening ? 'Listening...' : 'Type your message...',\n              className: \"flex-1 p-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n              type: \"submit\",\n              whileHover: {\n                scale: 1.05\n              },\n              whileTap: {\n                scale: 0.95\n              },\n              disabled: isLoading || !input.trim(),\n              className: \"p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\",\n              children: /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CharacterSelect, {\n      isOpen: isCharacterSelectOpen,\n      onCharacterSelect: handleCharacterSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"A01O7Tq9uDmCB5n2GAtfGRfDnGo=\", false, function () {\n  return [useSpeech];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","AnimatePresence","LazyMotion","domAnimation","PaperAirplaneIcon","Bars3Icon","UserCircleIcon","ArrowLeftOnRectangleIcon","Cog6ToothIcon","UserGroupIcon","MicrophoneIcon","SpeakerWaveIcon","SpeakerXMarkIcon","ChatBubbleLeftIcon","CharacterSelect","dropdownVariants","fetchCharacters","streamMessage","fetchChatMessages","fetchChatHistory","logout","useSpeech","MessageList","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","characters","setCharacters","selectedCharacter","setSelectedCharacter","isDropdownOpen","setIsDropdownOpen","isLoading","setIsLoading","error","setError","isSidebarOpen","setIsSidebarOpen","isUserMenuOpen","setIsUserMenuOpen","chatHistory","setChatHistory","selectedChat","setSelectedChat","isCharacterSelectOpen","setIsCharacterSelectOpen","isSpeechEnabled","setIsSpeechEnabled","isLoadingHistory","setIsLoadingHistory","startListening","stopListening","speak","isListening","isSpeaking","speechError","onSpeechResult","text","handleSendMessage","Event","onSpeechEnd","messagesEndRef","dropdownRef","userMenuRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadCharacters","loadAllChatHistory","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","data","console","userId","history","map","chat","_chat$message","id","toString","title","message","split","lastMessage","last_message","timestamp","Date","loadChatMessages","chatId","chatMessages","Array","isArray","Error","formattedMessages","msg","isUser","is_bot","character","find","c","character_id","botMessage","setTimeout","handleLogout","handleSettings","log","e","preventDefault","trim","userMessageId","now","userMessage","undefined","prev","botMessageId","fullResponse","isStreaming","user_id","toISOString","chat_id","filter","done","errorMessage","handleCharacterSelect","startNewChat","name","handleSidebarChat","handleNewChat","features","children","className","div","initial","x","animate","transition","type","stiffness","damping","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","button","toLocaleDateString","ref","variants","exit","onSubmit","whileHover","scale","whileTap","value","onChange","placeholder","disabled","isOpen","onCharacterSelect","_c","$RefreshReg$"],"sources":["C:/Users/ajits/fastapi-react-chatbot/frontend/src/components/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion, AnimatePresence, LazyMotion, domAnimation } from 'framer-motion';\nimport { \n    PaperAirplaneIcon, \n    ChevronDownIcon,\n    Bars3Icon,\n    UserCircleIcon,\n    ArrowLeftOnRectangleIcon,\n    Cog6ToothIcon,\n    UserGroupIcon,\n    MicrophoneIcon,\n    SpeakerWaveIcon,\n    SpeakerXMarkIcon,\n    ChatBubbleLeftIcon\n} from '@heroicons/react/24/solid';\nimport MessageBubble from './MessageBubble';\nimport TypingIndicator from './TypingIndicator';\nimport VoiceIndicator from './VoiceIndicator';\nimport { CharacterSelect } from './CharacterSelect';\nimport { containerVariants, dropdownVariants } from '../styles/variants';\nimport { fetchCharacters, streamMessage, fetchChatMessages, fetchChatHistory, StreamResponse } from '../services/api';\nimport { Character } from '../services/api';\nimport { logout } from '../services/auth';\nimport { useSpeech } from '../hooks/useSpeech';\nimport MessageList from './MessageList.tsx';\n\n// Using Character interface imported from API service\n\ninterface Message {\n    text: string;\n    isUser: boolean;\n    id: string;\n    isStreaming?: boolean;\n    character?: Character;\n    timestamp?: Date;\n    fadeOut?: boolean;\n    fadeIn?: boolean;\n}\n\ninterface ChatHistory {\n    id: string;\n    title: string;\n    lastMessage: string;\n    timestamp: Date;\n}\n\nconst Chat: React.FC = () => {\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [input, setInput] = useState<string>('');\n    const [characters, setCharacters] = useState<Character[]>([]);\n    const [selectedCharacter, setSelectedCharacter] = useState<Character | null>(null);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n    const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n    const [chatHistory, setChatHistory] = useState<ChatHistory[]>([]);\n    const [selectedChat, setSelectedChat] = useState<string | null>(null);\n    const [isCharacterSelectOpen, setIsCharacterSelectOpen] = useState(false);\n    const [isSpeechEnabled, setIsSpeechEnabled] = useState(true);\n    const [isLoadingHistory, setIsLoadingHistory] = useState(false);\n\n    const {\n        startListening,\n        stopListening,\n        speak,\n        isListening,\n        isSpeaking,\n        error: speechError\n    } = useSpeech({\n        onSpeechResult: (text) => {\n            setInput(text);\n            // Auto-send message when received from speech\n            handleSendMessage(new Event('submit') as any);\n        },\n        onSpeechEnd: () => {\n            // Handle any cleanup needed when speech recognition ends\n        }\n    });\n\n    const messagesEndRef = useRef<HTMLDivElement>(null);\n    const dropdownRef = useRef<HTMLDivElement>(null);\n    const userMenuRef = useRef<HTMLDivElement>(null);\n\n    const scrollToBottom = useCallback(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }, []);\n\n    useEffect(() => {\n        // Only load characters and chat history list on mount\n        loadCharacters();\n        loadAllChatHistory();\n\n        const handleClickOutside = (event: MouseEvent) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n                setIsDropdownOpen(false);\n            }\n            if (userMenuRef.current && !userMenuRef.current.contains(event.target as Node)) {\n                setIsUserMenuOpen(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages, isLoading, scrollToBottom]);\n\n    const loadCharacters = async () => {\n        try {\n            const data = await fetchCharacters();\n            setCharacters(data);\n        } catch (error) {\n            setError('Failed to load characters');\n            console.error('Error fetching characters:', error);\n        }\n    };\n\n    const loadAllChatHistory = async () => {\n        try {\n            const userId = 1; // TODO: Get from auth context\n            const history = await fetchChatHistory(userId);\n            setChatHistory(history.map(chat => ({\n                id: chat.id.toString(),\n                // Use first message or default to \"New Chat\"\n                title: chat.message?.split('\\n')[0] || \"New Chat\",\n                lastMessage: chat.last_message || chat.message || 'No messages',\n                timestamp: new Date(chat.timestamp)\n            })));\n        } catch (error) {\n            console.error('Error loading chat history:', error);\n            setError('Failed to load chat history list');\n        }\n    };\n\n    const loadChatMessages = async (chatId: string) => {\n        // Prevent loading if already loading this chat\n        if (isLoadingHistory || chatId === selectedChat) return;\n        \n        try {\n            setIsLoadingHistory(true);\n            setError(null);\n            \n            const chatMessages = await fetchChatMessages(chatId);\n            \n            if (!chatMessages || !Array.isArray(chatMessages)) {\n                throw new Error('Invalid chat history format');\n            }\n\n            // Format messages and set them all at once\n            const formattedMessages: Message[] = chatMessages.map((msg) => ({\n                id: msg.id.toString(),\n                text: msg.message,\n                isUser: !msg.is_bot,\n                character: characters.find(c => c.id === msg.character_id),\n                timestamp: new Date(msg.timestamp)\n            }));\n\n            setMessages(formattedMessages);\n            setSelectedChat(chatId);\n            \n            // Set character if it exists in the messages\n            const botMessage = chatMessages.find(msg => msg.character_id);\n            if (botMessage) {\n                const character = characters.find(c => c.id === botMessage.character_id);\n                if (character) setSelectedCharacter(character);\n            }\n\n            // Scroll to bottom after messages are loaded\n            setTimeout(scrollToBottom, 100);\n        } catch (error) {\n            console.error('Error loading chat messages:', error);\n            setError('Failed to load chat messages. Please try again.');\n            setMessages([]); // Clear messages on error\n        } finally {\n            setIsLoadingHistory(false);\n        }\n    };\n\n    const handleLogout = () => {\n        logout();\n    };\n\n    const handleSettings = () => {\n        console.log('Opening settings...');\n    };\n\n    const handleSendMessage = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (input.trim() && !isLoading) {\n            const userMessageId = Date.now().toString();\n            const userMessage = { \n                text: input, \n                isUser: true, \n                id: userMessageId,\n                character: selectedCharacter || undefined,\n                timestamp: new Date()\n            };\n            \n            // Update messages immediately with user message\n            setMessages(prev => [...prev, userMessage]);\n            setInput('');\n            setIsLoading(true);\n            setError(null);\n            \n            try {\n                const botMessageId = (Date.now() + 1).toString();\n                let fullResponse = '';\n                \n                // Add empty bot message that will be updated\n                setMessages(prev => [...prev, { \n                    text: '', \n                    isUser: false, \n                    id: botMessageId,\n                    isStreaming: true,\n                    character: selectedCharacter || undefined,\n                    timestamp: new Date()\n                }]);\n\n                await streamMessage(\n                    {\n                        message: input,\n                        character_id: selectedCharacter?.id,\n                        user_id: 1,\n                        timestamp: new Date().toISOString(),\n                        chat_id: selectedChat || undefined\n                    },\n                    (data: StreamResponse) => {\n                        if (data.error) {\n                            setError(data.error);\n                            setMessages(prev => prev.filter(msg => msg.id !== botMessageId));\n                            setIsLoading(false);\n                        } else {\n                            fullResponse += data.text || '';\n                            setMessages(prev => prev.map(msg => \n                                msg.id === botMessageId \n                                    ? { \n                                        ...msg, \n                                        text: fullResponse,\n                                        isStreaming: !data.done \n                                    }\n                                    : msg\n                            ));\n\n                            if (data.done) {\n                                setIsLoading(false);\n                                if (isSpeechEnabled && fullResponse) {\n                                    speak(fullResponse);\n                                }\n                            }\n                            scrollToBottom();\n                        }\n                    }\n                );\n            } catch (error) {\n                const errorMessage = error instanceof Error ? error.message : 'Failed to send message';\n                setError(errorMessage);\n                setIsLoading(false);\n            }\n        }\n    };\n\n    const handleCharacterSelect = async (character: Character) => {\n        // Clear any existing chat state\n        setMessages([]);\n        setSelectedChat(null);\n        setInput('');\n        setError(null);\n        setIsLoading(false);\n        \n        // Set the new character\n        setSelectedCharacter(character);\n        setIsCharacterSelectOpen(false);\n    };\n\n    const startNewChat = () => {\n        // Clear messages and selected chat\n        setMessages([]);\n        setSelectedChat(null);\n        \n        // If a character is selected, show their welcome message\n        if (selectedCharacter) {\n            setMessages([{\n                id: 'welcome',\n                text: selectedCharacter.id === 0 \n                    ? \"Starting a new chat. How can I help you?\"\n                    : `Starting a new chat with ${selectedCharacter.name}. How can I assist you?`,\n                isUser: false,\n                character: selectedCharacter,\n                timestamp: new Date()\n            }]);\n        }\n    };\n\n    const handleSidebarChat = async (chatId: string) => {\n        if (selectedChat === chatId) return;\n        await loadChatMessages(chatId);\n    };\n\n    const handleNewChat = () => {\n        startNewChat();\n        setIsSidebarOpen(true);\n    };\n\n    return (\n        <LazyMotion features={domAnimation}>\n            <div className=\"flex h-screen bg-gray-900\">\n                {/* Chat History Sidebar */}\n                <motion.div \n                    initial={{ x: isSidebarOpen ? 0 : -320 }}\n                    animate={{ x: isSidebarOpen ? 0 : -320 }}\n                    transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                    className=\"w-80 bg-gray-800 border-r border-gray-700 flex flex-col h-screen\"\n                >\n                    <div className=\"p-4 border-b border-gray-700\">\n                        <button\n                            onClick={handleNewChat}\n                            className=\"w-full py-3 px-4 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors duration-200 flex items-center justify-center gap-2 font-medium\"\n                        >\n                            <PaperAirplaneIcon className=\"w-5 h-5\" />\n                            New Chat\n                        </button>\n                    </div>\n                    <div className=\"flex-1 overflow-y-auto\">\n                        <div className=\"p-2 space-y-2\">\n                            {chatHistory.length === 0 ? (\n                                <div className=\"text-center py-8\">\n                                    <p className=\"text-gray-400\">No chat history</p>\n                                </div>\n                            ) : (\n                                chatHistory.map((chat) => (\n                                    <motion.button\n                                        key={chat.id}\n                                        onClick={() => handleSidebarChat(chat.id)}\n                                        className={`w-full p-3 rounded-lg text-left transition-all duration-200 group ${\n                                            selectedChat === chat.id \n                                                ? 'bg-gray-600/50 hover:bg-gray-600' \n                                                : 'hover:bg-gray-700'\n                                        }`}\n                                    >\n                                        <div className=\"flex items-start gap-3\">\n                                            <div className={`flex-shrink-0 w-4 h-4 mt-1 ${\n                                                selectedChat === chat.id ? 'text-white' : 'text-gray-400'\n                                            }`}>\n                                                <ChatBubbleLeftIcon className=\"w-4 h-4\" />\n                                            </div>\n                                            <div className=\"flex-1 min-w-0\">\n                                                <h3 className=\"text-sm font-medium text-gray-200 truncate group-hover:text-white\">\n                                                    {chat.title}\n                                                </h3>\n                                                <p className=\"text-xs text-gray-400 truncate mt-1\">\n                                                    {chat.lastMessage}\n                                                </p>\n                                            </div>\n                                            <time className=\"text-xs text-gray-500 flex-shrink-0\">\n                                                {chat.timestamp.toLocaleDateString()}\n                                            </time>\n                                        </div>\n                                    </motion.button>\n                                ))\n                            )}\n                        </div>\n                    </div>\n                </motion.div>\n\n                {/* Rest of the chat interface */}\n                <div className=\"flex-1 flex flex-col\">\n                    <div className=\"h-16 border-b border-gray-700 flex items-center justify-between px-4\">\n                        <button\n                            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n                            className=\"p-2 hover:bg-gray-700 rounded-lg transition-colors duration-200\"\n                        >\n                            <Bars3Icon className=\"w-6 h-6 text-white\" />\n                        </button>\n\n                        <button\n                            onClick={() => setIsCharacterSelectOpen(true)}\n                            className=\"flex items-center space-x-2 p-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors duration-200 text-white\"\n                        >\n                            <UserGroupIcon className=\"w-5 h-5\" />\n                            <span>{selectedCharacter ? selectedCharacter.name : 'Select Character'}</span>\n                        </button>\n\n                        <div className=\"relative\" ref={userMenuRef}>\n                            <button\n                                onClick={() => setIsUserMenuOpen(!isUserMenuOpen)}\n                                className=\"p-2 hover:bg-gray-700 rounded-full transition-colors duration-200\"\n                            >\n                                <UserCircleIcon className=\"w-8 h-8 text-white\" />\n                            </button>\n\n                            <AnimatePresence>\n                                {isUserMenuOpen && (\n                                    <motion.div\n                                        variants={dropdownVariants}\n                                        initial=\"hidden\"\n                                        animate=\"visible\"\n                                        exit=\"hidden\"\n                                        className=\"absolute right-0 mt-2 w-48 bg-gray-700 rounded-lg shadow-xl z-10\"\n                                    >\n                                        <div className=\"py-2\">\n                                            <button\n                                                onClick={handleSettings}\n                                                className=\"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\"\n                                            >\n                                                <Cog6ToothIcon className=\"w-5 h-5 mr-2\" />\n                                                Settings\n                                            </button>\n                                            <button\n                                                onClick={handleLogout}\n                                                className=\"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\"\n                                            >\n                                                <ArrowLeftOnRectangleIcon className=\"w-5 h-5 mr-2\" />\n                                                Logout\n                                            </button>\n                                        </div>\n                                    </motion.div>\n                                )}\n                            </AnimatePresence>\n                        </div>\n                    </div>\n\n                    <div className=\"flex-1 overflow-y-auto p-4\">\n                        {isLoadingHistory ? (\n                            <div className=\"flex justify-center items-center h-full\">\n                                <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"></div>\n                            </div>\n                        ) : (\n                            <div className=\"space-y-4\">\n                                <MessageList \n                                    messages={messages}\n                                    isLoading={isLoading}\n                                    error={error}\n                                />\n                                <div ref={messagesEndRef} />\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"p-4 border-t border-gray-700\">\n                        <form onSubmit={handleSendMessage} className=\"flex gap-2\">\n                            <div className=\"flex gap-2\">\n                                <motion.button\n                                    type=\"button\"\n                                    whileHover={{ scale: 1.05 }}\n                                    whileTap={{ scale: 0.95 }}\n                                    onClick={() => {\n                                        if (isListening) {\n                                            stopListening();\n                                        } else {\n                                            startListening();\n                                        }\n                                    }}\n                                    className={`p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${\n                                        isListening \n                                            ? 'bg-blue-600 text-white' \n                                            : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    }`}\n                                >\n                                    <MicrophoneIcon className=\"w-6 h-6\" />\n                                </motion.button>\n                                <motion.button\n                                    type=\"button\"\n                                    whileHover={{ scale: 1.05 }}\n                                    whileTap={{ scale: 0.95 }}\n                                    onClick={() => setIsSpeechEnabled(!isSpeechEnabled)}\n                                    className={`p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${\n                                        isSpeechEnabled \n                                            ? 'bg-purple-600 text-white' \n                                            : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    }`}\n                                >\n                                    {isSpeechEnabled ? (\n                                        <SpeakerWaveIcon className=\"w-6 h-6\" />\n                                    ) : (\n                                        <SpeakerXMarkIcon className=\"w-6 h-6\" />\n                                    )}\n                                </motion.button>\n                            </div>\n                            <input\n                                type=\"text\"\n                                value={input}\n                                onChange={(e) => setInput(e.target.value)}\n                                placeholder={isListening ? 'Listening...' : 'Type your message...'}\n                                className=\"flex-1 p-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                            />\n                            <motion.button\n                                type=\"submit\"\n                                whileHover={{ scale: 1.05 }}\n                                whileTap={{ scale: 0.95 }}\n                                disabled={isLoading || !input.trim()}\n                                className=\"p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                                <PaperAirplaneIcon className=\"w-6 h-6\" />\n                            </motion.button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n            <CharacterSelect\n                isOpen={isCharacterSelectOpen}\n                onCharacterSelect={handleCharacterSelect}\n            />\n        </LazyMotion>\n    );\n};\n\nexport default Chat;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,MAAM,EAAEC,eAAe,EAAEC,UAAU,EAAEC,YAAY,QAAQ,eAAe;AACjF,SACIC,iBAAiB,EAEjBC,SAAS,EACTC,cAAc,EACdC,wBAAwB,EACxBC,aAAa,EACbC,aAAa,EACbC,cAAc,EACdC,eAAe,EACfC,gBAAgB,EAChBC,kBAAkB,QACf,2BAA2B;AAIlC,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAA4BC,gBAAgB,QAAQ,oBAAoB;AACxE,SAASC,eAAe,EAAEC,aAAa,EAAEC,iBAAiB,EAAEC,gBAAgB,QAAwB,iBAAiB;AAErH,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,OAAOC,WAAW,MAAM,mBAAmB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAoBA,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACiC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACmC,UAAU,EAAEC,aAAa,CAAC,GAAGpC,QAAQ,CAAc,EAAE,CAAC;EAC7D,MAAM,CAACqC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtC,QAAQ,CAAmB,IAAI,CAAC;EAClF,MAAM,CAACuC,cAAc,EAAEC,iBAAiB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACyC,SAAS,EAAEC,YAAY,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC2C,KAAK,EAAEC,QAAQ,CAAC,GAAG5C,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAAC6C,aAAa,EAAEC,gBAAgB,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC+C,cAAc,EAAEC,iBAAiB,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACiD,WAAW,EAAEC,cAAc,CAAC,GAAGlD,QAAQ,CAAgB,EAAE,CAAC;EACjE,MAAM,CAACmD,YAAY,EAAEC,eAAe,CAAC,GAAGpD,QAAQ,CAAgB,IAAI,CAAC;EACrE,MAAM,CAACqD,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACuD,eAAe,EAAEC,kBAAkB,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACyD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAM;IACF2D,cAAc;IACdC,aAAa;IACbC,KAAK;IACLC,WAAW;IACXC,UAAU;IACVpB,KAAK,EAAEqB;EACX,CAAC,GAAGvC,SAAS,CAAC;IACVwC,cAAc,EAAGC,IAAI,IAAK;MACtBhC,QAAQ,CAACgC,IAAI,CAAC;MACd;MACAC,iBAAiB,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAQ,CAAC;IACjD,CAAC;IACDC,WAAW,EAAEA,CAAA,KAAM;MACf;IAAA;EAER,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAGpE,MAAM,CAAiB,IAAI,CAAC;EACnD,MAAMqE,WAAW,GAAGrE,MAAM,CAAiB,IAAI,CAAC;EAChD,MAAMsE,WAAW,GAAGtE,MAAM,CAAiB,IAAI,CAAC;EAEhD,MAAMuE,cAAc,GAAGtE,WAAW,CAAC,MAAM;IAAA,IAAAuE,qBAAA;IACrC,CAAAA,qBAAA,GAAAJ,cAAc,CAACK,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN5E,SAAS,CAAC,MAAM;IACZ;IACA6E,cAAc,CAAC,CAAC;IAChBC,kBAAkB,CAAC,CAAC;IAEpB,MAAMC,kBAAkB,GAAIC,KAAiB,IAAK;MAC9C,IAAIV,WAAW,CAACI,OAAO,IAAI,CAACJ,WAAW,CAACI,OAAO,CAACO,QAAQ,CAACD,KAAK,CAACE,MAAc,CAAC,EAAE;QAC5E3C,iBAAiB,CAAC,KAAK,CAAC;MAC5B;MACA,IAAIgC,WAAW,CAACG,OAAO,IAAI,CAACH,WAAW,CAACG,OAAO,CAACO,QAAQ,CAACD,KAAK,CAACE,MAAc,CAAC,EAAE;QAC5EnC,iBAAiB,CAAC,KAAK,CAAC;MAC5B;IACJ,CAAC;IAEDoC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEL,kBAAkB,CAAC;IAC1D,OAAO,MAAMI,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;EAC9E,CAAC,EAAE,EAAE,CAAC;EAEN/E,SAAS,CAAC,MAAM;IACZwE,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAAC1C,QAAQ,EAAEU,SAAS,EAAEgC,cAAc,CAAC,CAAC;EAEzC,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMS,IAAI,GAAG,MAAMnE,eAAe,CAAC,CAAC;MACpCgB,aAAa,CAACmD,IAAI,CAAC;IACvB,CAAC,CAAC,OAAO5C,KAAK,EAAE;MACZC,QAAQ,CAAC,2BAA2B,CAAC;MACrC4C,OAAO,CAAC7C,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,MAAMoC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACA,MAAMU,MAAM,GAAG,CAAC,CAAC,CAAC;MAClB,MAAMC,OAAO,GAAG,MAAMnE,gBAAgB,CAACkE,MAAM,CAAC;MAC9CvC,cAAc,CAACwC,OAAO,CAACC,GAAG,CAACC,IAAI;QAAA,IAAAC,aAAA;QAAA,OAAK;UAChCC,EAAE,EAAEF,IAAI,CAACE,EAAE,CAACC,QAAQ,CAAC,CAAC;UACtB;UACAC,KAAK,EAAE,EAAAH,aAAA,GAAAD,IAAI,CAACK,OAAO,cAAAJ,aAAA,uBAAZA,aAAA,CAAcK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAI,UAAU;UACjDC,WAAW,EAAEP,IAAI,CAACQ,YAAY,IAAIR,IAAI,CAACK,OAAO,IAAI,aAAa;UAC/DI,SAAS,EAAE,IAAIC,IAAI,CAACV,IAAI,CAACS,SAAS;QACtC,CAAC;MAAA,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,OAAO1D,KAAK,EAAE;MACZ6C,OAAO,CAAC7C,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,QAAQ,CAAC,kCAAkC,CAAC;IAChD;EACJ,CAAC;EAED,MAAM2D,gBAAgB,GAAG,MAAOC,MAAc,IAAK;IAC/C;IACA,IAAI/C,gBAAgB,IAAI+C,MAAM,KAAKrD,YAAY,EAAE;IAEjD,IAAI;MACAO,mBAAmB,CAAC,IAAI,CAAC;MACzBd,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAM6D,YAAY,GAAG,MAAMnF,iBAAiB,CAACkF,MAAM,CAAC;MAEpD,IAAI,CAACC,YAAY,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,EAAE;QAC/C,MAAM,IAAIG,KAAK,CAAC,6BAA6B,CAAC;MAClD;;MAEA;MACA,MAAMC,iBAA4B,GAAGJ,YAAY,CAACd,GAAG,CAAEmB,GAAG,KAAM;QAC5DhB,EAAE,EAAEgB,GAAG,CAAChB,EAAE,CAACC,QAAQ,CAAC,CAAC;QACrB7B,IAAI,EAAE4C,GAAG,CAACb,OAAO;QACjBc,MAAM,EAAE,CAACD,GAAG,CAACE,MAAM;QACnBC,SAAS,EAAE9E,UAAU,CAAC+E,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrB,EAAE,KAAKgB,GAAG,CAACM,YAAY,CAAC;QAC1Df,SAAS,EAAE,IAAIC,IAAI,CAACQ,GAAG,CAACT,SAAS;MACrC,CAAC,CAAC,CAAC;MAEHrE,WAAW,CAAC6E,iBAAiB,CAAC;MAC9BzD,eAAe,CAACoD,MAAM,CAAC;;MAEvB;MACA,MAAMa,UAAU,GAAGZ,YAAY,CAACS,IAAI,CAACJ,GAAG,IAAIA,GAAG,CAACM,YAAY,CAAC;MAC7D,IAAIC,UAAU,EAAE;QACZ,MAAMJ,SAAS,GAAG9E,UAAU,CAAC+E,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrB,EAAE,KAAKuB,UAAU,CAACD,YAAY,CAAC;QACxE,IAAIH,SAAS,EAAE3E,oBAAoB,CAAC2E,SAAS,CAAC;MAClD;;MAEA;MACAK,UAAU,CAAC7C,cAAc,EAAE,GAAG,CAAC;IACnC,CAAC,CAAC,OAAO9B,KAAK,EAAE;MACZ6C,OAAO,CAAC7C,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDC,QAAQ,CAAC,iDAAiD,CAAC;MAC3DZ,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB,CAAC,SAAS;MACN0B,mBAAmB,CAAC,KAAK,CAAC;IAC9B;EACJ,CAAC;EAED,MAAM6D,YAAY,GAAGA,CAAA,KAAM;IACvB/F,MAAM,CAAC,CAAC;EACZ,CAAC;EAED,MAAMgG,cAAc,GAAGA,CAAA,KAAM;IACzBhC,OAAO,CAACiC,GAAG,CAAC,qBAAqB,CAAC;EACtC,CAAC;EAED,MAAMtD,iBAAiB,GAAG,MAAOuD,CAAkB,IAAK;IACpDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI1F,KAAK,CAAC2F,IAAI,CAAC,CAAC,IAAI,CAACnF,SAAS,EAAE;MAC5B,MAAMoF,aAAa,GAAGvB,IAAI,CAACwB,GAAG,CAAC,CAAC,CAAC/B,QAAQ,CAAC,CAAC;MAC3C,MAAMgC,WAAW,GAAG;QAChB7D,IAAI,EAAEjC,KAAK;QACX8E,MAAM,EAAE,IAAI;QACZjB,EAAE,EAAE+B,aAAa;QACjBZ,SAAS,EAAE5E,iBAAiB,IAAI2F,SAAS;QACzC3B,SAAS,EAAE,IAAIC,IAAI,CAAC;MACxB,CAAC;;MAED;MACAtE,WAAW,CAACiG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEF,WAAW,CAAC,CAAC;MAC3C7F,QAAQ,CAAC,EAAE,CAAC;MACZQ,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACA,MAAMsF,YAAY,GAAG,CAAC5B,IAAI,CAACwB,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE/B,QAAQ,CAAC,CAAC;QAChD,IAAIoC,YAAY,GAAG,EAAE;;QAErB;QACAnG,WAAW,CAACiG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAC1B/D,IAAI,EAAE,EAAE;UACR6C,MAAM,EAAE,KAAK;UACbjB,EAAE,EAAEoC,YAAY;UAChBE,WAAW,EAAE,IAAI;UACjBnB,SAAS,EAAE5E,iBAAiB,IAAI2F,SAAS;UACzC3B,SAAS,EAAE,IAAIC,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,MAAMjF,aAAa,CACf;UACI4E,OAAO,EAAEhE,KAAK;UACdmF,YAAY,EAAE/E,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEyD,EAAE;UACnCuC,OAAO,EAAE,CAAC;UACVhC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACgC,WAAW,CAAC,CAAC;UACnCC,OAAO,EAAEpF,YAAY,IAAI6E;QAC7B,CAAC,EACAzC,IAAoB,IAAK;UACtB,IAAIA,IAAI,CAAC5C,KAAK,EAAE;YACZC,QAAQ,CAAC2C,IAAI,CAAC5C,KAAK,CAAC;YACpBX,WAAW,CAACiG,IAAI,IAAIA,IAAI,CAACO,MAAM,CAAC1B,GAAG,IAAIA,GAAG,CAAChB,EAAE,KAAKoC,YAAY,CAAC,CAAC;YAChExF,YAAY,CAAC,KAAK,CAAC;UACvB,CAAC,MAAM;YACHyF,YAAY,IAAI5C,IAAI,CAACrB,IAAI,IAAI,EAAE;YAC/BlC,WAAW,CAACiG,IAAI,IAAIA,IAAI,CAACtC,GAAG,CAACmB,GAAG,IAC5BA,GAAG,CAAChB,EAAE,KAAKoC,YAAY,GACjB;cACE,GAAGpB,GAAG;cACN5C,IAAI,EAAEiE,YAAY;cAClBC,WAAW,EAAE,CAAC7C,IAAI,CAACkD;YACvB,CAAC,GACC3B,GACV,CAAC,CAAC;YAEF,IAAIvB,IAAI,CAACkD,IAAI,EAAE;cACX/F,YAAY,CAAC,KAAK,CAAC;cACnB,IAAIa,eAAe,IAAI4E,YAAY,EAAE;gBACjCtE,KAAK,CAACsE,YAAY,CAAC;cACvB;YACJ;YACA1D,cAAc,CAAC,CAAC;UACpB;QACJ,CACJ,CAAC;MACL,CAAC,CAAC,OAAO9B,KAAK,EAAE;QACZ,MAAM+F,YAAY,GAAG/F,KAAK,YAAYiE,KAAK,GAAGjE,KAAK,CAACsD,OAAO,GAAG,wBAAwB;QACtFrD,QAAQ,CAAC8F,YAAY,CAAC;QACtBhG,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ;EACJ,CAAC;EAED,MAAMiG,qBAAqB,GAAG,MAAO1B,SAAoB,IAAK;IAC1D;IACAjF,WAAW,CAAC,EAAE,CAAC;IACfoB,eAAe,CAAC,IAAI,CAAC;IACrBlB,QAAQ,CAAC,EAAE,CAAC;IACZU,QAAQ,CAAC,IAAI,CAAC;IACdF,YAAY,CAAC,KAAK,CAAC;;IAEnB;IACAJ,oBAAoB,CAAC2E,SAAS,CAAC;IAC/B3D,wBAAwB,CAAC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMsF,YAAY,GAAGA,CAAA,KAAM;IACvB;IACA5G,WAAW,CAAC,EAAE,CAAC;IACfoB,eAAe,CAAC,IAAI,CAAC;;IAErB;IACA,IAAIf,iBAAiB,EAAE;MACnBL,WAAW,CAAC,CAAC;QACT8D,EAAE,EAAE,SAAS;QACb5B,IAAI,EAAE7B,iBAAiB,CAACyD,EAAE,KAAK,CAAC,GAC1B,0CAA0C,GAC1C,4BAA4BzD,iBAAiB,CAACwG,IAAI,yBAAyB;QACjF9B,MAAM,EAAE,KAAK;QACbE,SAAS,EAAE5E,iBAAiB;QAC5BgE,SAAS,EAAE,IAAIC,IAAI,CAAC;MACxB,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EAED,MAAMwC,iBAAiB,GAAG,MAAOtC,MAAc,IAAK;IAChD,IAAIrD,YAAY,KAAKqD,MAAM,EAAE;IAC7B,MAAMD,gBAAgB,CAACC,MAAM,CAAC;EAClC,CAAC;EAED,MAAMuC,aAAa,GAAGA,CAAA,KAAM;IACxBH,YAAY,CAAC,CAAC;IACd9F,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACIlB,OAAA,CAACtB,UAAU;IAAC0I,QAAQ,EAAEzI,YAAa;IAAA0I,QAAA,gBAC/BrH,OAAA;MAAKsH,SAAS,EAAC,2BAA2B;MAAAD,QAAA,gBAEtCrH,OAAA,CAACxB,MAAM,CAAC+I,GAAG;QACPC,OAAO,EAAE;UAAEC,CAAC,EAAExG,aAAa,GAAG,CAAC,GAAG,CAAC;QAAI,CAAE;QACzCyG,OAAO,EAAE;UAAED,CAAC,EAAExG,aAAa,GAAG,CAAC,GAAG,CAAC;QAAI,CAAE;QACzC0G,UAAU,EAAE;UAAEC,IAAI,EAAE,QAAQ;UAAEC,SAAS,EAAE,GAAG;UAAEC,OAAO,EAAE;QAAG,CAAE;QAC5DR,SAAS,EAAC,kEAAkE;QAAAD,QAAA,gBAE5ErH,OAAA;UAAKsH,SAAS,EAAC,8BAA8B;UAAAD,QAAA,eACzCrH,OAAA;YACI+H,OAAO,EAAEZ,aAAc;YACvBG,SAAS,EAAC,wJAAwJ;YAAAD,QAAA,gBAElKrH,OAAA,CAACpB,iBAAiB;cAAC0I,SAAS,EAAC;YAAS;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,YAE7C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACNnI,OAAA;UAAKsH,SAAS,EAAC,wBAAwB;UAAAD,QAAA,eACnCrH,OAAA;YAAKsH,SAAS,EAAC,eAAe;YAAAD,QAAA,EACzBhG,WAAW,CAAC+G,MAAM,KAAK,CAAC,gBACrBpI,OAAA;cAAKsH,SAAS,EAAC,kBAAkB;cAAAD,QAAA,eAC7BrH,OAAA;gBAAGsH,SAAS,EAAC,eAAe;gBAAAD,QAAA,EAAC;cAAe;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,GAEN9G,WAAW,CAAC0C,GAAG,CAAEC,IAAI,iBACjBhE,OAAA,CAACxB,MAAM,CAAC6J,MAAM;cAEVN,OAAO,EAAEA,CAAA,KAAMb,iBAAiB,CAAClD,IAAI,CAACE,EAAE,CAAE;cAC1CoD,SAAS,EAAE,qEACP/F,YAAY,KAAKyC,IAAI,CAACE,EAAE,GAClB,kCAAkC,GAClC,mBAAmB,EAC1B;cAAAmD,QAAA,eAEHrH,OAAA;gBAAKsH,SAAS,EAAC,wBAAwB;gBAAAD,QAAA,gBACnCrH,OAAA;kBAAKsH,SAAS,EAAE,8BACZ/F,YAAY,KAAKyC,IAAI,CAACE,EAAE,GAAG,YAAY,GAAG,eAAe,EAC1D;kBAAAmD,QAAA,eACCrH,OAAA,CAACX,kBAAkB;oBAACiI,SAAS,EAAC;kBAAS;oBAAAU,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzC,CAAC,eACNnI,OAAA;kBAAKsH,SAAS,EAAC,gBAAgB;kBAAAD,QAAA,gBAC3BrH,OAAA;oBAAIsH,SAAS,EAAC,mEAAmE;oBAAAD,QAAA,EAC5ErD,IAAI,CAACI;kBAAK;oBAAA4D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACX,CAAC,eACLnI,OAAA;oBAAGsH,SAAS,EAAC,qCAAqC;oBAAAD,QAAA,EAC7CrD,IAAI,CAACO;kBAAW;oBAAAyD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAClB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACNnI,OAAA;kBAAMsH,SAAS,EAAC,qCAAqC;kBAAAD,QAAA,EAChDrD,IAAI,CAACS,SAAS,CAAC6D,kBAAkB,CAAC;gBAAC;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN;YAAC,GAzBDnE,IAAI,CAACE,EAAE;cAAA8D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA0BD,CAClB;UACJ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGbnI,OAAA;QAAKsH,SAAS,EAAC,sBAAsB;QAAAD,QAAA,gBACjCrH,OAAA;UAAKsH,SAAS,EAAC,sEAAsE;UAAAD,QAAA,gBACjFrH,OAAA;YACI+H,OAAO,EAAEA,CAAA,KAAM7G,gBAAgB,CAAC,CAACD,aAAa,CAAE;YAChDqG,SAAS,EAAC,iEAAiE;YAAAD,QAAA,eAE3ErH,OAAA,CAACnB,SAAS;cAACyI,SAAS,EAAC;YAAoB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eAETnI,OAAA;YACI+H,OAAO,EAAEA,CAAA,KAAMrG,wBAAwB,CAAC,IAAI,CAAE;YAC9C4F,SAAS,EAAC,oHAAoH;YAAAD,QAAA,gBAE9HrH,OAAA,CAACf,aAAa;cAACqI,SAAS,EAAC;YAAS;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACrCnI,OAAA;cAAAqH,QAAA,EAAO5G,iBAAiB,GAAGA,iBAAiB,CAACwG,IAAI,GAAG;YAAkB;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1E,CAAC,eAETnI,OAAA;YAAKsH,SAAS,EAAC,UAAU;YAACiB,GAAG,EAAE3F,WAAY;YAAAyE,QAAA,gBACvCrH,OAAA;cACI+H,OAAO,EAAEA,CAAA,KAAM3G,iBAAiB,CAAC,CAACD,cAAc,CAAE;cAClDmG,SAAS,EAAC,mEAAmE;cAAAD,QAAA,eAE7ErH,OAAA,CAAClB,cAAc;gBAACwI,SAAS,EAAC;cAAoB;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,eAETnI,OAAA,CAACvB,eAAe;cAAA4I,QAAA,EACXlG,cAAc,iBACXnB,OAAA,CAACxB,MAAM,CAAC+I,GAAG;gBACPiB,QAAQ,EAAEjJ,gBAAiB;gBAC3BiI,OAAO,EAAC,QAAQ;gBAChBE,OAAO,EAAC,SAAS;gBACjBe,IAAI,EAAC,QAAQ;gBACbnB,SAAS,EAAC,kEAAkE;gBAAAD,QAAA,eAE5ErH,OAAA;kBAAKsH,SAAS,EAAC,MAAM;kBAAAD,QAAA,gBACjBrH,OAAA;oBACI+H,OAAO,EAAEnC,cAAe;oBACxB0B,SAAS,EAAC,0GAA0G;oBAAAD,QAAA,gBAEpHrH,OAAA,CAAChB,aAAa;sBAACsI,SAAS,EAAC;oBAAc;sBAAAU,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,YAE9C;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACTnI,OAAA;oBACI+H,OAAO,EAAEpC,YAAa;oBACtB2B,SAAS,EAAC,0GAA0G;oBAAAD,QAAA,gBAEpHrH,OAAA,CAACjB,wBAAwB;sBAACuI,SAAS,EAAC;oBAAc;sBAAAU,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,UAEzD;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE;YACf;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACY,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAENnI,OAAA;UAAKsH,SAAS,EAAC,4BAA4B;UAAAD,QAAA,EACtCxF,gBAAgB,gBACb7B,OAAA;YAAKsH,SAAS,EAAC,yCAAyC;YAAAD,QAAA,eACpDrH,OAAA;cAAKsH,SAAS,EAAC;YAAyE;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9F,CAAC,gBAENnI,OAAA;YAAKsH,SAAS,EAAC,WAAW;YAAAD,QAAA,gBACtBrH,OAAA,CAACF,WAAW;cACRK,QAAQ,EAAEA,QAAS;cACnBU,SAAS,EAAEA,SAAU;cACrBE,KAAK,EAAEA;YAAM;cAAAiH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC,eACFnI,OAAA;cAAKuI,GAAG,EAAE7F;YAAe;cAAAsF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QACR;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAENnI,OAAA;UAAKsH,SAAS,EAAC,8BAA8B;UAAAD,QAAA,eACzCrH,OAAA;YAAM0I,QAAQ,EAAEnG,iBAAkB;YAAC+E,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACrDrH,OAAA;cAAKsH,SAAS,EAAC,YAAY;cAAAD,QAAA,gBACvBrH,OAAA,CAACxB,MAAM,CAAC6J,MAAM;gBACVT,IAAI,EAAC,QAAQ;gBACbe,UAAU,EAAE;kBAAEC,KAAK,EAAE;gBAAK,CAAE;gBAC5BC,QAAQ,EAAE;kBAAED,KAAK,EAAE;gBAAK,CAAE;gBAC1Bb,OAAO,EAAEA,CAAA,KAAM;kBACX,IAAI7F,WAAW,EAAE;oBACbF,aAAa,CAAC,CAAC;kBACnB,CAAC,MAAM;oBACHD,cAAc,CAAC,CAAC;kBACpB;gBACJ,CAAE;gBACFuF,SAAS,EAAE,oJACPpF,WAAW,GACL,wBAAwB,GACxB,6CAA6C,EACpD;gBAAAmF,QAAA,eAEHrH,OAAA,CAACd,cAAc;kBAACoI,SAAS,EAAC;gBAAS;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC,eAChBnI,OAAA,CAACxB,MAAM,CAAC6J,MAAM;gBACVT,IAAI,EAAC,QAAQ;gBACbe,UAAU,EAAE;kBAAEC,KAAK,EAAE;gBAAK,CAAE;gBAC5BC,QAAQ,EAAE;kBAAED,KAAK,EAAE;gBAAK,CAAE;gBAC1Bb,OAAO,EAAEA,CAAA,KAAMnG,kBAAkB,CAAC,CAACD,eAAe,CAAE;gBACpD2F,SAAS,EAAE,oJACP3F,eAAe,GACT,0BAA0B,GAC1B,6CAA6C,EACpD;gBAAA0F,QAAA,EAEF1F,eAAe,gBACZ3B,OAAA,CAACb,eAAe;kBAACmI,SAAS,EAAC;gBAAS;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAEvCnI,OAAA,CAACZ,gBAAgB;kBAACkI,SAAS,EAAC;gBAAS;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAC1C;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACU,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC,eACNnI,OAAA;cACI4H,IAAI,EAAC,MAAM;cACXkB,KAAK,EAAEzI,KAAM;cACb0I,QAAQ,EAAGjD,CAAC,IAAKxF,QAAQ,CAACwF,CAAC,CAACvC,MAAM,CAACuF,KAAK,CAAE;cAC1CE,WAAW,EAAE9G,WAAW,GAAG,cAAc,GAAG,sBAAuB;cACnEoF,SAAS,EAAC;YAAuK;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpL,CAAC,eACFnI,OAAA,CAACxB,MAAM,CAAC6J,MAAM;cACVT,IAAI,EAAC,QAAQ;cACbe,UAAU,EAAE;gBAAEC,KAAK,EAAE;cAAK,CAAE;cAC5BC,QAAQ,EAAE;gBAAED,KAAK,EAAE;cAAK,CAAE;cAC1BK,QAAQ,EAAEpI,SAAS,IAAI,CAACR,KAAK,CAAC2F,IAAI,CAAC,CAAE;cACrCsB,SAAS,EAAC,2OAA2O;cAAAD,QAAA,eAErPrH,OAAA,CAACpB,iBAAiB;gBAAC0I,SAAS,EAAC;cAAS;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENnI,OAAA,CAACV,eAAe;MACZ4J,MAAM,EAAEzH,qBAAsB;MAC9B0H,iBAAiB,EAAEpC;IAAsB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAErB,CAAC;AAACjI,EAAA,CA9cID,IAAc;EAAA,QAuBZJ,SAAS;AAAA;AAAAuJ,EAAA,GAvBXnJ,IAAc;AAgdpB,eAAeA,IAAI;AAAC,IAAAmJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}