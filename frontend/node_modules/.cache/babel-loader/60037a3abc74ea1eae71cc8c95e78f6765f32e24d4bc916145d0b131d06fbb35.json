{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import{motion,AnimatePresence,LazyMotion,domAnimation}from'framer-motion';import{PaperAirplaneIcon,Bars3Icon,UserCircleIcon,ArrowLeftOnRectangleIcon,Cog6ToothIcon,UserGroupIcon,MicrophoneIcon,SpeakerWaveIcon,SpeakerXMarkIcon,ChatBubbleLeftIcon}from'@heroicons/react/24/solid';import{CharacterSelect}from'./CharacterSelect';import{dropdownVariants}from'../styles/variants';import{fetchCharacters,streamMessage,fetchChatMessages,fetchChatHistory}from'../services/api';import{logout}from'../services/auth';import{useSpeech}from'../hooks/useSpeech';import MessageList from'./MessageList';// Using Character interface imported from API service\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[characters,setCharacters]=useState([]);const[selectedCharacter,setSelectedCharacter]=useState(null);const[isDropdownOpen,setIsDropdownOpen]=useState(false);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[isSidebarOpen,setIsSidebarOpen]=useState(true);const[isUserMenuOpen,setIsUserMenuOpen]=useState(false);const[chatHistory,setChatHistory]=useState([]);const[selectedChat,setSelectedChat]=useState(null);const[isCharacterSelectOpen,setIsCharacterSelectOpen]=useState(false);const[isSpeechEnabled,setIsSpeechEnabled]=useState(true);const[isLoadingHistory,setIsLoadingHistory]=useState(false);const{startListening,stopListening,speak,isListening,isSpeaking,error:speechError}=useSpeech({onSpeechResult:text=>{setInput(text);// Auto-send message when received from speech\nhandleSendMessage(new Event('submit'));},onSpeechEnd:()=>{// Handle any cleanup needed when speech recognition ends\n}});const messagesEndRef=useRef(null);const dropdownRef=useRef(null);const userMenuRef=useRef(null);const scrollToBottom=useCallback(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});},[]);useEffect(()=>{// Only load characters and chat history list on mount\nloadCharacters();loadAllChatHistory();const handleClickOutside=event=>{if(dropdownRef.current&&!dropdownRef.current.contains(event.target)){setIsDropdownOpen(false);}if(userMenuRef.current&&!userMenuRef.current.contains(event.target)){setIsUserMenuOpen(false);}};document.addEventListener('mousedown',handleClickOutside);return()=>document.removeEventListener('mousedown',handleClickOutside);},[]);useEffect(()=>{scrollToBottom();},[messages,isLoading,scrollToBottom]);const loadCharacters=async()=>{try{const data=await fetchCharacters();setCharacters(data);}catch(error){setError('Failed to load characters');console.error('Error fetching characters:',error);}};const loadAllChatHistory=async()=>{try{const userId=1;// TODO: Get from auth context\nconst history=await fetchChatHistory(userId);setChatHistory(history.map(chat=>{var _chat$message;return{id:chat.id.toString(),// Use first message or default to \"New Chat\"\ntitle:((_chat$message=chat.message)===null||_chat$message===void 0?void 0:_chat$message.split('\\n')[0])||\"New Chat\",lastMessage:chat.last_message||chat.message||'No messages',timestamp:new Date(chat.timestamp)};}));}catch(error){console.error('Error loading chat history:',error);setError('Failed to load chat history list');}};const loadChatMessages=async chatId=>{// Prevent loading if already loading this chat\nif(isLoadingHistory||chatId===selectedChat)return;try{setIsLoadingHistory(true);setError(null);const chatMessages=await fetchChatMessages(chatId);if(!chatMessages||!Array.isArray(chatMessages)){throw new Error('Invalid chat history format');}// Format messages and set them all at once\nconst formattedMessages=chatMessages.map(msg=>({id:msg.id.toString(),text:msg.message,isUser:!msg.is_bot,character:characters.find(c=>c.id===msg.character_id),timestamp:new Date(msg.timestamp)}));setMessages(formattedMessages);setSelectedChat(chatId);// Set character if it exists in the messages\nconst botMessage=chatMessages.find(msg=>msg.character_id);if(botMessage){const character=characters.find(c=>c.id===botMessage.character_id);if(character)setSelectedCharacter(character);}// Scroll to bottom after messages are loaded\nsetTimeout(scrollToBottom,100);}catch(error){console.error('Error loading chat messages:',error);setError('Failed to load chat messages. Please try again.');setMessages([]);// Clear messages on error\n}finally{setIsLoadingHistory(false);}};const handleLogout=()=>{logout();};const handleSettings=()=>{console.log('Opening settings...');};const handleSendMessage=async e=>{e.preventDefault();if(input.trim()&&!isLoading){const userMessageId=Date.now().toString();const userMessage={text:input,isUser:true,id:userMessageId,character:selectedCharacter||undefined,timestamp:new Date()};// Update messages immediately with user message\nsetMessages(prev=>[...prev,userMessage]);setInput('');setIsLoading(true);setError(null);try{const botMessageId=(Date.now()+1).toString();let fullResponse='';// Add empty bot message that will be updated\nsetMessages(prev=>[...prev,{text:'',isUser:false,id:botMessageId,isStreaming:true,character:selectedCharacter||undefined,timestamp:new Date()}]);await streamMessage({message:input,character_id:selectedCharacter===null||selectedCharacter===void 0?void 0:selectedCharacter.id,user_id:1,timestamp:new Date().toISOString(),chat_id:selectedChat||undefined},data=>{if(data.error){setError(data.error);setMessages(prev=>prev.filter(msg=>msg.id!==botMessageId));setIsLoading(false);}else{fullResponse+=data.text||'';setMessages(prev=>prev.map(msg=>msg.id===botMessageId?{...msg,text:fullResponse,isStreaming:!data.done}:msg));if(data.done){setIsLoading(false);if(isSpeechEnabled&&fullResponse){speak(fullResponse);}}scrollToBottom();}});}catch(error){const errorMessage=error instanceof Error?error.message:'Failed to send message';setError(errorMessage);setIsLoading(false);}}};const handleCharacterSelect=async character=>{// Clear any existing chat state\nsetMessages([]);setSelectedChat(null);setInput('');setError(null);setIsLoading(false);// Set the new character\nsetSelectedCharacter(character);setIsCharacterSelectOpen(false);};const startNewChat=()=>{// Clear messages and selected chat\nsetMessages([]);setSelectedChat(null);// If a character is selected, show their welcome message\nif(selectedCharacter){setMessages([{id:'welcome',text:selectedCharacter.id===0?\"Starting a new chat. How can I help you?\":`Starting a new chat with ${selectedCharacter.name}. How can I assist you?`,isUser:false,character:selectedCharacter,timestamp:new Date()}]);}};const handleSidebarChat=async chatId=>{if(selectedChat===chatId)return;await loadChatMessages(chatId);};const handleNewChat=()=>{startNewChat();setIsSidebarOpen(true);};return/*#__PURE__*/_jsxs(LazyMotion,{features:domAnimation,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-screen bg-gray-900\",children:[/*#__PURE__*/_jsxs(motion.div,{initial:{x:isSidebarOpen?0:-320},animate:{x:isSidebarOpen?0:-320},transition:{type:\"spring\",stiffness:300,damping:30},className:\"w-80 bg-gray-800 border-r border-gray-700 flex flex-col h-screen\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-b border-gray-700\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:handleNewChat,className:\"w-full py-3 px-4 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors duration-200 flex items-center justify-center gap-2 font-medium\",children:[/*#__PURE__*/_jsx(PaperAirplaneIcon,{className:\"w-5 h-5\"}),\"New Chat\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto\",children:/*#__PURE__*/_jsx(\"div\",{className:\"p-2 space-y-2\",children:chatHistory.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-8\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400\",children:\"No chat history\"})}):chatHistory.map(chat=>/*#__PURE__*/_jsx(motion.button,{onClick:()=>handleSidebarChat(chat.id),className:`w-full p-3 rounded-lg text-left transition-all duration-200 group ${selectedChat===chat.id?'bg-gray-600/50 hover:bg-gray-600':'hover:bg-gray-700'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:`flex-shrink-0 w-4 h-4 mt-1 ${selectedChat===chat.id?'text-white':'text-gray-400'}`,children:/*#__PURE__*/_jsx(ChatBubbleLeftIcon,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-gray-200 truncate group-hover:text-white\",children:chat.title}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-400 truncate mt-1\",children:chat.lastMessage})]}),/*#__PURE__*/_jsx(\"time\",{className:\"text-xs text-gray-500 flex-shrink-0\",children:chat.timestamp.toLocaleDateString()})]})},chat.id))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"h-16 border-b border-gray-700 flex items-center justify-between px-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsSidebarOpen(!isSidebarOpen),className:\"p-2 hover:bg-gray-700 rounded-lg transition-colors duration-200\",children:/*#__PURE__*/_jsx(Bars3Icon,{className:\"w-6 h-6 text-white\"})}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setIsCharacterSelectOpen(true),className:\"flex items-center space-x-2 p-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors duration-200 text-white\",children:[/*#__PURE__*/_jsx(UserGroupIcon,{className:\"w-5 h-5\"}),/*#__PURE__*/_jsx(\"span\",{children:selectedCharacter?selectedCharacter.name:'Select Character'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",ref:userMenuRef,children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsUserMenuOpen(!isUserMenuOpen),className:\"p-2 hover:bg-gray-700 rounded-full transition-colors duration-200\",children:/*#__PURE__*/_jsx(UserCircleIcon,{className:\"w-8 h-8 text-white\"})}),/*#__PURE__*/_jsx(AnimatePresence,{children:isUserMenuOpen&&/*#__PURE__*/_jsx(motion.div,{variants:dropdownVariants,initial:\"hidden\",animate:\"visible\",exit:\"hidden\",className:\"absolute right-0 mt-2 w-48 bg-gray-700 rounded-lg shadow-xl z-10\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"py-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:handleSettings,className:\"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\",children:[/*#__PURE__*/_jsx(Cog6ToothIcon,{className:\"w-5 h-5 mr-2\"}),\"Settings\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleLogout,className:\"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\",children:[/*#__PURE__*/_jsx(ArrowLeftOnRectangleIcon,{className:\"w-5 h-5 mr-2\"}),\"Logout\"]})]})})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-4\",children:isLoadingHistory?/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-full\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(MessageList,{messages:messages,isLoading:isLoading,error:error}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-t border-gray-700\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendMessage,className:\"flex gap-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(motion.button,{type:\"button\",whileHover:{scale:1.05},whileTap:{scale:0.95},onClick:()=>{if(isListening){stopListening();}else{startListening();}},className:`p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${isListening?'bg-blue-600 text-white':'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,children:/*#__PURE__*/_jsx(MicrophoneIcon,{className:\"w-6 h-6\"})}),/*#__PURE__*/_jsx(motion.button,{type:\"button\",whileHover:{scale:1.05},whileTap:{scale:0.95},onClick:()=>setIsSpeechEnabled(!isSpeechEnabled),className:`p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${isSpeechEnabled?'bg-purple-600 text-white':'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,children:isSpeechEnabled?/*#__PURE__*/_jsx(SpeakerWaveIcon,{className:\"w-6 h-6\"}):/*#__PURE__*/_jsx(SpeakerXMarkIcon,{className:\"w-6 h-6\"})})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:isListening?'Listening...':'Type your message...',className:\"flex-1 p-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"}),/*#__PURE__*/_jsx(motion.button,{type:\"submit\",whileHover:{scale:1.05},whileTap:{scale:0.95},disabled:isLoading||!input.trim(),className:\"p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\",children:/*#__PURE__*/_jsx(PaperAirplaneIcon,{className:\"w-6 h-6\"})})]})})]})]}),/*#__PURE__*/_jsx(CharacterSelect,{isOpen:isCharacterSelectOpen,onCharacterSelect:handleCharacterSelect})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","AnimatePresence","LazyMotion","domAnimation","PaperAirplaneIcon","Bars3Icon","UserCircleIcon","ArrowLeftOnRectangleIcon","Cog6ToothIcon","UserGroupIcon","MicrophoneIcon","SpeakerWaveIcon","SpeakerXMarkIcon","ChatBubbleLeftIcon","CharacterSelect","dropdownVariants","fetchCharacters","streamMessage","fetchChatMessages","fetchChatHistory","logout","useSpeech","MessageList","jsx","_jsx","jsxs","_jsxs","Chat","messages","setMessages","input","setInput","characters","setCharacters","selectedCharacter","setSelectedCharacter","isDropdownOpen","setIsDropdownOpen","isLoading","setIsLoading","error","setError","isSidebarOpen","setIsSidebarOpen","isUserMenuOpen","setIsUserMenuOpen","chatHistory","setChatHistory","selectedChat","setSelectedChat","isCharacterSelectOpen","setIsCharacterSelectOpen","isSpeechEnabled","setIsSpeechEnabled","isLoadingHistory","setIsLoadingHistory","startListening","stopListening","speak","isListening","isSpeaking","speechError","onSpeechResult","text","handleSendMessage","Event","onSpeechEnd","messagesEndRef","dropdownRef","userMenuRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadCharacters","loadAllChatHistory","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","data","console","userId","history","map","chat","_chat$message","id","toString","title","message","split","lastMessage","last_message","timestamp","Date","loadChatMessages","chatId","chatMessages","Array","isArray","Error","formattedMessages","msg","isUser","is_bot","character","find","c","character_id","botMessage","setTimeout","handleLogout","handleSettings","log","e","preventDefault","trim","userMessageId","now","userMessage","undefined","prev","botMessageId","fullResponse","isStreaming","user_id","toISOString","chat_id","filter","done","errorMessage","handleCharacterSelect","startNewChat","name","handleSidebarChat","handleNewChat","features","children","className","div","initial","x","animate","transition","type","stiffness","damping","onClick","length","button","toLocaleDateString","ref","variants","exit","onSubmit","whileHover","scale","whileTap","value","onChange","placeholder","disabled","isOpen","onCharacterSelect"],"sources":["C:/Users/ajits/fastapi-react-chatbot/frontend/src/components/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion, AnimatePresence, LazyMotion, domAnimation } from 'framer-motion';\nimport { \n    PaperAirplaneIcon, \n    ChevronDownIcon,\n    Bars3Icon,\n    UserCircleIcon,\n    ArrowLeftOnRectangleIcon,\n    Cog6ToothIcon,\n    UserGroupIcon,\n    MicrophoneIcon,\n    SpeakerWaveIcon,\n    SpeakerXMarkIcon,\n    ChatBubbleLeftIcon\n} from '@heroicons/react/24/solid';\nimport MessageBubble from './MessageBubble';\nimport TypingIndicator from './TypingIndicator';\nimport VoiceIndicator from './VoiceIndicator';\nimport { CharacterSelect } from './CharacterSelect';\nimport { containerVariants, dropdownVariants } from '../styles/variants';\nimport { fetchCharacters, streamMessage, fetchChatMessages, fetchChatHistory, StreamResponse } from '../services/api';\nimport { Character } from '../services/api';\nimport { logout } from '../services/auth';\nimport { useSpeech } from '../hooks/useSpeech';\nimport MessageList from './MessageList';\n\n// Using Character interface imported from API service\n\ninterface Message {\n    text: string;\n    isUser: boolean;\n    id: string;\n    isStreaming?: boolean;\n    character?: Character;\n    timestamp?: Date;\n    fadeOut?: boolean;\n    fadeIn?: boolean;\n}\n\ninterface ChatHistory {\n    id: string;\n    title: string;\n    lastMessage: string;\n    timestamp: Date;\n}\n\nconst Chat: React.FC = () => {\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [input, setInput] = useState<string>('');\n    const [characters, setCharacters] = useState<Character[]>([]);\n    const [selectedCharacter, setSelectedCharacter] = useState<Character | null>(null);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n    const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n    const [chatHistory, setChatHistory] = useState<ChatHistory[]>([]);\n    const [selectedChat, setSelectedChat] = useState<string | null>(null);\n    const [isCharacterSelectOpen, setIsCharacterSelectOpen] = useState(false);\n    const [isSpeechEnabled, setIsSpeechEnabled] = useState(true);\n    const [isLoadingHistory, setIsLoadingHistory] = useState(false);\n\n    const {\n        startListening,\n        stopListening,\n        speak,\n        isListening,\n        isSpeaking,\n        error: speechError\n    } = useSpeech({\n        onSpeechResult: (text) => {\n            setInput(text);\n            // Auto-send message when received from speech\n            handleSendMessage(new Event('submit') as any);\n        },\n        onSpeechEnd: () => {\n            // Handle any cleanup needed when speech recognition ends\n        }\n    });\n\n    const messagesEndRef = useRef<HTMLDivElement>(null);\n    const dropdownRef = useRef<HTMLDivElement>(null);\n    const userMenuRef = useRef<HTMLDivElement>(null);\n\n    const scrollToBottom = useCallback(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }, []);\n\n    useEffect(() => {\n        // Only load characters and chat history list on mount\n        loadCharacters();\n        loadAllChatHistory();\n\n        const handleClickOutside = (event: MouseEvent) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n                setIsDropdownOpen(false);\n            }\n            if (userMenuRef.current && !userMenuRef.current.contains(event.target as Node)) {\n                setIsUserMenuOpen(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages, isLoading, scrollToBottom]);\n\n    const loadCharacters = async () => {\n        try {\n            const data = await fetchCharacters();\n            setCharacters(data);\n        } catch (error) {\n            setError('Failed to load characters');\n            console.error('Error fetching characters:', error);\n        }\n    };\n\n    const loadAllChatHistory = async () => {\n        try {\n            const userId = 1; // TODO: Get from auth context\n            const history = await fetchChatHistory(userId);\n            setChatHistory(history.map(chat => ({\n                id: chat.id.toString(),\n                // Use first message or default to \"New Chat\"\n                title: chat.message?.split('\\n')[0] || \"New Chat\",\n                lastMessage: chat.last_message || chat.message || 'No messages',\n                timestamp: new Date(chat.timestamp)\n            })));\n        } catch (error) {\n            console.error('Error loading chat history:', error);\n            setError('Failed to load chat history list');\n        }\n    };\n\n    const loadChatMessages = async (chatId: string) => {\n        // Prevent loading if already loading this chat\n        if (isLoadingHistory || chatId === selectedChat) return;\n        \n        try {\n            setIsLoadingHistory(true);\n            setError(null);\n            \n            const chatMessages = await fetchChatMessages(chatId);\n            \n            if (!chatMessages || !Array.isArray(chatMessages)) {\n                throw new Error('Invalid chat history format');\n            }\n\n            // Format messages and set them all at once\n            const formattedMessages: Message[] = chatMessages.map((msg) => ({\n                id: msg.id.toString(),\n                text: msg.message,\n                isUser: !msg.is_bot,\n                character: characters.find(c => c.id === msg.character_id),\n                timestamp: new Date(msg.timestamp)\n            }));\n\n            setMessages(formattedMessages);\n            setSelectedChat(chatId);\n            \n            // Set character if it exists in the messages\n            const botMessage = chatMessages.find(msg => msg.character_id);\n            if (botMessage) {\n                const character = characters.find(c => c.id === botMessage.character_id);\n                if (character) setSelectedCharacter(character);\n            }\n\n            // Scroll to bottom after messages are loaded\n            setTimeout(scrollToBottom, 100);\n        } catch (error) {\n            console.error('Error loading chat messages:', error);\n            setError('Failed to load chat messages. Please try again.');\n            setMessages([]); // Clear messages on error\n        } finally {\n            setIsLoadingHistory(false);\n        }\n    };\n\n    const handleLogout = () => {\n        logout();\n    };\n\n    const handleSettings = () => {\n        console.log('Opening settings...');\n    };\n\n    const handleSendMessage = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (input.trim() && !isLoading) {\n            const userMessageId = Date.now().toString();\n            const userMessage = { \n                text: input, \n                isUser: true, \n                id: userMessageId,\n                character: selectedCharacter || undefined,\n                timestamp: new Date()\n            };\n            \n            // Update messages immediately with user message\n            setMessages(prev => [...prev, userMessage]);\n            setInput('');\n            setIsLoading(true);\n            setError(null);\n            \n            try {\n                const botMessageId = (Date.now() + 1).toString();\n                let fullResponse = '';\n                \n                // Add empty bot message that will be updated\n                setMessages(prev => [...prev, { \n                    text: '', \n                    isUser: false, \n                    id: botMessageId,\n                    isStreaming: true,\n                    character: selectedCharacter || undefined,\n                    timestamp: new Date()\n                }]);\n\n                await streamMessage(\n                    {\n                        message: input,\n                        character_id: selectedCharacter?.id,\n                        user_id: 1,\n                        timestamp: new Date().toISOString(),\n                        chat_id: selectedChat || undefined\n                    },\n                    (data: StreamResponse) => {\n                        if (data.error) {\n                            setError(data.error);\n                            setMessages(prev => prev.filter(msg => msg.id !== botMessageId));\n                            setIsLoading(false);\n                        } else {\n                            fullResponse += data.text || '';\n                            setMessages(prev => prev.map(msg => \n                                msg.id === botMessageId \n                                    ? { \n                                        ...msg, \n                                        text: fullResponse,\n                                        isStreaming: !data.done \n                                    }\n                                    : msg\n                            ));\n\n                            if (data.done) {\n                                setIsLoading(false);\n                                if (isSpeechEnabled && fullResponse) {\n                                    speak(fullResponse);\n                                }\n                            }\n                            scrollToBottom();\n                        }\n                    }\n                );\n            } catch (error) {\n                const errorMessage = error instanceof Error ? error.message : 'Failed to send message';\n                setError(errorMessage);\n                setIsLoading(false);\n            }\n        }\n    };\n\n    const handleCharacterSelect = async (character: Character) => {\n        // Clear any existing chat state\n        setMessages([]);\n        setSelectedChat(null);\n        setInput('');\n        setError(null);\n        setIsLoading(false);\n        \n        // Set the new character\n        setSelectedCharacter(character);\n        setIsCharacterSelectOpen(false);\n    };\n\n    const startNewChat = () => {\n        // Clear messages and selected chat\n        setMessages([]);\n        setSelectedChat(null);\n        \n        // If a character is selected, show their welcome message\n        if (selectedCharacter) {\n            setMessages([{\n                id: 'welcome',\n                text: selectedCharacter.id === 0 \n                    ? \"Starting a new chat. How can I help you?\"\n                    : `Starting a new chat with ${selectedCharacter.name}. How can I assist you?`,\n                isUser: false,\n                character: selectedCharacter,\n                timestamp: new Date()\n            }]);\n        }\n    };\n\n    const handleSidebarChat = async (chatId: string) => {\n        if (selectedChat === chatId) return;\n        await loadChatMessages(chatId);\n    };\n\n    const handleNewChat = () => {\n        startNewChat();\n        setIsSidebarOpen(true);\n    };\n\n    return (\n        <LazyMotion features={domAnimation}>\n            <div className=\"flex h-screen bg-gray-900\">\n                {/* Chat History Sidebar */}\n                <motion.div \n                    initial={{ x: isSidebarOpen ? 0 : -320 }}\n                    animate={{ x: isSidebarOpen ? 0 : -320 }}\n                    transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                    className=\"w-80 bg-gray-800 border-r border-gray-700 flex flex-col h-screen\"\n                >\n                    <div className=\"p-4 border-b border-gray-700\">\n                        <button\n                            onClick={handleNewChat}\n                            className=\"w-full py-3 px-4 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors duration-200 flex items-center justify-center gap-2 font-medium\"\n                        >\n                            <PaperAirplaneIcon className=\"w-5 h-5\" />\n                            New Chat\n                        </button>\n                    </div>\n                    <div className=\"flex-1 overflow-y-auto\">\n                        <div className=\"p-2 space-y-2\">\n                            {chatHistory.length === 0 ? (\n                                <div className=\"text-center py-8\">\n                                    <p className=\"text-gray-400\">No chat history</p>\n                                </div>\n                            ) : (\n                                chatHistory.map((chat) => (\n                                    <motion.button\n                                        key={chat.id}\n                                        onClick={() => handleSidebarChat(chat.id)}\n                                        className={`w-full p-3 rounded-lg text-left transition-all duration-200 group ${\n                                            selectedChat === chat.id \n                                                ? 'bg-gray-600/50 hover:bg-gray-600' \n                                                : 'hover:bg-gray-700'\n                                        }`}\n                                    >\n                                        <div className=\"flex items-start gap-3\">\n                                            <div className={`flex-shrink-0 w-4 h-4 mt-1 ${\n                                                selectedChat === chat.id ? 'text-white' : 'text-gray-400'\n                                            }`}>\n                                                <ChatBubbleLeftIcon className=\"w-4 h-4\" />\n                                            </div>\n                                            <div className=\"flex-1 min-w-0\">\n                                                <h3 className=\"text-sm font-medium text-gray-200 truncate group-hover:text-white\">\n                                                    {chat.title}\n                                                </h3>\n                                                <p className=\"text-xs text-gray-400 truncate mt-1\">\n                                                    {chat.lastMessage}\n                                                </p>\n                                            </div>\n                                            <time className=\"text-xs text-gray-500 flex-shrink-0\">\n                                                {chat.timestamp.toLocaleDateString()}\n                                            </time>\n                                        </div>\n                                    </motion.button>\n                                ))\n                            )}\n                        </div>\n                    </div>\n                </motion.div>\n\n                {/* Rest of the chat interface */}\n                <div className=\"flex-1 flex flex-col\">\n                    <div className=\"h-16 border-b border-gray-700 flex items-center justify-between px-4\">\n                        <button\n                            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n                            className=\"p-2 hover:bg-gray-700 rounded-lg transition-colors duration-200\"\n                        >\n                            <Bars3Icon className=\"w-6 h-6 text-white\" />\n                        </button>\n\n                        <button\n                            onClick={() => setIsCharacterSelectOpen(true)}\n                            className=\"flex items-center space-x-2 p-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors duration-200 text-white\"\n                        >\n                            <UserGroupIcon className=\"w-5 h-5\" />\n                            <span>{selectedCharacter ? selectedCharacter.name : 'Select Character'}</span>\n                        </button>\n\n                        <div className=\"relative\" ref={userMenuRef}>\n                            <button\n                                onClick={() => setIsUserMenuOpen(!isUserMenuOpen)}\n                                className=\"p-2 hover:bg-gray-700 rounded-full transition-colors duration-200\"\n                            >\n                                <UserCircleIcon className=\"w-8 h-8 text-white\" />\n                            </button>\n\n                            <AnimatePresence>\n                                {isUserMenuOpen && (\n                                    <motion.div\n                                        variants={dropdownVariants}\n                                        initial=\"hidden\"\n                                        animate=\"visible\"\n                                        exit=\"hidden\"\n                                        className=\"absolute right-0 mt-2 w-48 bg-gray-700 rounded-lg shadow-xl z-10\"\n                                    >\n                                        <div className=\"py-2\">\n                                            <button\n                                                onClick={handleSettings}\n                                                className=\"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\"\n                                            >\n                                                <Cog6ToothIcon className=\"w-5 h-5 mr-2\" />\n                                                Settings\n                                            </button>\n                                            <button\n                                                onClick={handleLogout}\n                                                className=\"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\"\n                                            >\n                                                <ArrowLeftOnRectangleIcon className=\"w-5 h-5 mr-2\" />\n                                                Logout\n                                            </button>\n                                        </div>\n                                    </motion.div>\n                                )}\n                            </AnimatePresence>\n                        </div>\n                    </div>\n\n                    <div className=\"flex-1 overflow-y-auto p-4\">\n                        {isLoadingHistory ? (\n                            <div className=\"flex justify-center items-center h-full\">\n                                <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"></div>\n                            </div>\n                        ) : (\n                            <div className=\"space-y-4\">\n                                <MessageList \n                                    messages={messages}\n                                    isLoading={isLoading}\n                                    error={error}\n                                />\n                                <div ref={messagesEndRef} />\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"p-4 border-t border-gray-700\">\n                        <form onSubmit={handleSendMessage} className=\"flex gap-2\">\n                            <div className=\"flex gap-2\">\n                                <motion.button\n                                    type=\"button\"\n                                    whileHover={{ scale: 1.05 }}\n                                    whileTap={{ scale: 0.95 }}\n                                    onClick={() => {\n                                        if (isListening) {\n                                            stopListening();\n                                        } else {\n                                            startListening();\n                                        }\n                                    }}\n                                    className={`p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${\n                                        isListening \n                                            ? 'bg-blue-600 text-white' \n                                            : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    }`}\n                                >\n                                    <MicrophoneIcon className=\"w-6 h-6\" />\n                                </motion.button>\n                                <motion.button\n                                    type=\"button\"\n                                    whileHover={{ scale: 1.05 }}\n                                    whileTap={{ scale: 0.95 }}\n                                    onClick={() => setIsSpeechEnabled(!isSpeechEnabled)}\n                                    className={`p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${\n                                        isSpeechEnabled \n                                            ? 'bg-purple-600 text-white' \n                                            : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    }`}\n                                >\n                                    {isSpeechEnabled ? (\n                                        <SpeakerWaveIcon className=\"w-6 h-6\" />\n                                    ) : (\n                                        <SpeakerXMarkIcon className=\"w-6 h-6\" />\n                                    )}\n                                </motion.button>\n                            </div>\n                            <input\n                                type=\"text\"\n                                value={input}\n                                onChange={(e) => setInput(e.target.value)}\n                                placeholder={isListening ? 'Listening...' : 'Type your message...'}\n                                className=\"flex-1 p-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                            />\n                            <motion.button\n                                type=\"submit\"\n                                whileHover={{ scale: 1.05 }}\n                                whileTap={{ scale: 0.95 }}\n                                disabled={isLoading || !input.trim()}\n                                className=\"p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                                <PaperAirplaneIcon className=\"w-6 h-6\" />\n                            </motion.button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n            <CharacterSelect\n                isOpen={isCharacterSelectOpen}\n                onCharacterSelect={handleCharacterSelect}\n            />\n        </LazyMotion>\n    );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}