{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajits\\\\fastapi-react-chatbot\\\\frontend\\\\src\\\\components\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion, AnimatePresence, LazyMotion, domAnimation } from 'framer-motion';\nimport { PaperAirplaneIcon, Bars3Icon, UserCircleIcon, ArrowLeftOnRectangleIcon, Cog6ToothIcon, UserGroupIcon, MicrophoneIcon, SpeakerWaveIcon, SpeakerXMarkIcon } from '@heroicons/react/24/solid';\nimport MessageBubble from './MessageBubble';\nimport TypingIndicator from './TypingIndicator';\nimport VoiceIndicator from './VoiceIndicator';\nimport { CharacterSelect } from './CharacterSelect';\nimport { dropdownVariants } from '../styles/variants';\nimport { fetchCharacters, streamMessage, fetchChatMessages, fetchChatHistory } from '../services/api';\nimport { logout } from '../services/auth';\nimport { useSpeech } from '../hooks/useSpeech';\n\n// Using Character interface imported from API service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [conversationBlocks, setConversationBlocks] = useState([]);\n  const [input, setInput] = useState('');\n  const [characters, setCharacters] = useState([]);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [isCharacterSelectOpen, setIsCharacterSelectOpen] = useState(false);\n  const [isSpeechEnabled, setIsSpeechEnabled] = useState(true);\n  const {\n    startListening,\n    stopListening,\n    speak,\n    isListening,\n    isSpeaking,\n    error: speechError\n  } = useSpeech({\n    onSpeechResult: text => {\n      setInput(text);\n      // Auto-send message when received from speech\n      handleSendMessage(new Event('submit'));\n    },\n    onSpeechEnd: () => {\n      // Handle any cleanup needed when speech recognition ends\n    }\n  });\n  const messagesEndRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const userMenuRef = useRef(null);\n  const scrollToBottom = useCallback(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, []);\n  useEffect(() => {\n    const loadInitialState = async () => {\n      await loadCharacters();\n      await loadAllChatHistory();\n      const defaultAssistant = {\n        id: 0,\n        name: 'AI Assistant',\n        movie: 'Default',\n        chat_style: 'helpful and friendly',\n        example_responses: [],\n        created_at: new Date().toISOString()\n      };\n      setSelectedCharacter(defaultAssistant);\n      // Start with empty messages instead of welcome message\n      setMessages([]);\n    };\n    loadInitialState();\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsDropdownOpen(false);\n      }\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\n        setIsUserMenuOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isLoading, scrollToBottom]);\n  const loadCharacters = async () => {\n    try {\n      const data = await fetchCharacters();\n      setCharacters(data);\n    } catch (error) {\n      setError('Failed to load characters');\n      console.error('Error fetching characters:', error);\n    }\n  };\n  const loadAllChatHistory = async () => {\n    try {\n      const userId = 1; // TODO: Get from auth context\n      const history = await fetchChatHistory(userId);\n      setChatHistory(history.map(chat => ({\n        id: chat.id.toString(),\n        title: `Chat ${chat.id}`,\n        lastMessage: chat.last_message || chat.message || 'No messages',\n        timestamp: new Date(chat.timestamp)\n      })));\n    } catch (error) {\n      console.error('Error loading chat history:', error);\n      setError('Failed to load chat history list');\n    }\n  };\n  const groupMessagesIntoBlocks = messages => {\n    const blocks = [];\n    for (let i = 0; i < messages.length; i += 2) {\n      const userMessage = messages[i];\n      const botMessage = messages[i + 1];\n      if (userMessage && userMessage.isUser) {\n        blocks.push({\n          id: userMessage.id,\n          userMessage,\n          botMessage: botMessage && !botMessage.isUser ? botMessage : undefined,\n          timestamp: userMessage.timestamp || new Date()\n        });\n      }\n    }\n    return blocks;\n  };\n  useEffect(() => {\n    const blocks = groupMessagesIntoBlocks(messages);\n    setConversationBlocks(blocks);\n  }, [messages]);\n  const loadChatMessages = async chatId => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const chatMessages = await fetchChatMessages(chatId);\n      if (!chatMessages || !Array.isArray(chatMessages)) {\n        throw new Error('Invalid chat history format');\n      }\n      const formattedMessages = chatMessages.map(msg => ({\n        id: msg.id.toString(),\n        text: msg.message,\n        isUser: !msg.is_bot,\n        character: characters.find(c => c.id === msg.character_id),\n        timestamp: new Date(msg.timestamp)\n      }));\n      setMessages(formattedMessages);\n      setSelectedChat(chatId);\n    } catch (error) {\n      console.error('Error loading chat messages:', error);\n      setError('Failed to load chat messages. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    logout();\n  };\n  const handleSettings = () => {\n    console.log('Opening settings...');\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (input.trim() && !isLoading) {\n      const userMessageId = Date.now().toString();\n      const userMessage = {\n        text: input,\n        isUser: true,\n        id: userMessageId,\n        character: selectedCharacter || undefined,\n        timestamp: new Date()\n      };\n      const botMessageId = (Date.now() + 1).toString();\n      setMessages(prev => [...prev, userMessage, {\n        text: '',\n        isUser: false,\n        id: botMessageId,\n        isStreaming: true,\n        character: selectedCharacter || undefined,\n        timestamp: new Date()\n      }]);\n      setInput('');\n      setIsLoading(true);\n      setError(null);\n      try {\n        let fullResponse = '';\n        await streamMessage({\n          message: input,\n          character_id: selectedCharacter === null || selectedCharacter === void 0 ? void 0 : selectedCharacter.id,\n          user_id: 1\n        }, data => {\n          if (data.error) {\n            setError(data.error);\n            setMessages(prev => prev.filter(msg => msg.id !== botMessageId));\n            setIsLoading(false);\n          } else {\n            fullResponse += data.text || '';\n            setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n              ...msg,\n              text: fullResponse,\n              isStreaming: !data.done\n            } : msg));\n            if (data.done) {\n              setIsLoading(false);\n              if (isSpeechEnabled && fullResponse) {\n                speak(fullResponse);\n              }\n            }\n            scrollToBottom();\n          }\n        });\n      } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : 'Failed to send message';\n        setError(errorMessage);\n        console.error('Error sending message:', error);\n        setIsLoading(false);\n      }\n    }\n  };\n  const handleCharacterSelect = async character => {\n    setSelectedCharacter(character);\n    setIsCharacterSelectOpen(false);\n\n    // Clear current messages and show welcome message\n    setMessages([{\n      id: 'welcome',\n      text: character.id === 0 ? \"Switched to AI Assistant. How can I help you?\" : `Switched to ${character.name} from ${character.movie}. How can I assist you?`,\n      isUser: false,\n      character: character,\n      timestamp: new Date()\n    }]);\n\n    // Clear selected chat since we're starting fresh\n    setSelectedChat(null);\n  };\n  return /*#__PURE__*/_jsxDEV(LazyMotion, {\n    features: domAnimation,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen bg-gray-900\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          x: isSidebarOpen ? 0 : -320\n        },\n        animate: {\n          x: isSidebarOpen ? 0 : -320\n        },\n        transition: {\n          type: \"spring\",\n          stiffness: 300,\n          damping: 30\n        },\n        className: \"w-80 bg-gray-800 border-r border-gray-700 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-white\",\n            children: \"Chat History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-4\",\n          children: chatHistory.map(chat => /*#__PURE__*/_jsxDEV(motion.button, {\n            whileHover: {\n              backgroundColor: 'rgba(75, 85, 99, 0.4)'\n            },\n            onClick: () => loadChatMessages(chat.id),\n            className: `w-full p-3 rounded-lg mb-2 text-left ${selectedChat === chat.id ? 'bg-gray-700' : 'hover:bg-gray-700'} transition-colors duration-200`,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-white font-medium\",\n              children: chat.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-400 text-sm truncate\",\n              children: chat.lastMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500 text-xs\",\n              children: chat.timestamp.toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 33\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-16 border-b border-gray-700 flex items-center justify-between px-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsSidebarOpen(!isSidebarOpen),\n            className: \"p-2 hover:bg-gray-700 rounded-lg transition-colors duration-200\",\n            children: /*#__PURE__*/_jsxDEV(Bars3Icon, {\n              className: \"w-6 h-6 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCharacterSelectOpen(true),\n            className: \"flex items-center space-x-2 p-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors duration-200 text-white\",\n            children: [/*#__PURE__*/_jsxDEV(UserGroupIcon, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedCharacter ? selectedCharacter.name : 'Select Character'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            ref: userMenuRef,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsUserMenuOpen(!isUserMenuOpen),\n              className: \"p-2 hover:bg-gray-700 rounded-full transition-colors duration-200\",\n              children: /*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                className: \"w-8 h-8 text-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n              children: isUserMenuOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n                variants: dropdownVariants,\n                initial: \"hidden\",\n                animate: \"visible\",\n                exit: \"hidden\",\n                className: \"absolute right-0 mt-2 w-48 bg-gray-700 rounded-lg shadow-xl z-10\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"py-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleSettings,\n                    className: \"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(Cog6ToothIcon, {\n                      className: \"w-5 h-5 mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 367,\n                      columnNumber: 49\n                    }, this), \"Settings\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleLogout,\n                    className: \"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(ArrowLeftOnRectangleIcon, {\n                      className: \"w-5 h-5 mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 49\n                    }, this), \"Logout\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n              initial: false,\n              children: conversationBlocks.map(block => /*#__PURE__*/_jsxDEV(motion.div, {\n                className: \"conversation-block space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(MessageBubble, {\n                  message: block.userMessage.text,\n                  isUser: true,\n                  character: block.userMessage.character\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 41\n                }, this), block.botMessage && /*#__PURE__*/_jsxDEV(MessageBubble, {\n                  message: block.botMessage.text,\n                  isUser: false,\n                  isTyping: block.botMessage.isStreaming,\n                  character: block.botMessage.character\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 45\n                }, this)]\n              }, block.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 29\n            }, this), (isListening || isSpeaking) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-center\",\n              children: [/*#__PURE__*/_jsxDEV(VoiceIndicator, {\n                isActive: isListening,\n                type: \"listening\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(VoiceIndicator, {\n                isActive: isSpeaking,\n                type: \"speaking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 33\n            }, this), isLoading && !messages.some(msg => msg.isStreaming) && /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0\n              },\n              animate: {\n                opacity: 1\n              },\n              exit: {\n                opacity: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0\n              },\n              animate: {\n                opacity: 1\n              },\n              className: \"text-red-500 text-sm p-2 rounded-lg bg-red-500/10\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(motion.button, {\n                type: \"button\",\n                whileHover: {\n                  scale: 1.05\n                },\n                whileTap: {\n                  scale: 0.95\n                },\n                onClick: () => {\n                  if (isListening) {\n                    stopListening();\n                  } else {\n                    startListening();\n                  }\n                },\n                className: `p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${isListening ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                children: /*#__PURE__*/_jsxDEV(MicrophoneIcon, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n                type: \"button\",\n                whileHover: {\n                  scale: 1.05\n                },\n                whileTap: {\n                  scale: 0.95\n                },\n                onClick: () => setIsSpeechEnabled(!isSpeechEnabled),\n                className: `p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${isSpeechEnabled ? 'bg-purple-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                children: isSpeechEnabled ? /*#__PURE__*/_jsxDEV(SpeakerWaveIcon, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(SpeakerXMarkIcon, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: isListening ? 'Listening...' : 'Type your message...',\n              className: \"flex-1 p-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n              type: \"submit\",\n              whileHover: {\n                scale: 1.05\n              },\n              whileTap: {\n                scale: 0.95\n              },\n              disabled: isLoading || !input.trim(),\n              className: \"p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\",\n              children: /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CharacterSelect, {\n      isOpen: isCharacterSelectOpen,\n      onCharacterSelect: handleCharacterSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"D5WXZqqsadxG28YBVDak9eTUUDM=\", false, function () {\n  return [useSpeech];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","AnimatePresence","LazyMotion","domAnimation","PaperAirplaneIcon","Bars3Icon","UserCircleIcon","ArrowLeftOnRectangleIcon","Cog6ToothIcon","UserGroupIcon","MicrophoneIcon","SpeakerWaveIcon","SpeakerXMarkIcon","MessageBubble","TypingIndicator","VoiceIndicator","CharacterSelect","dropdownVariants","fetchCharacters","streamMessage","fetchChatMessages","fetchChatHistory","logout","useSpeech","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","conversationBlocks","setConversationBlocks","input","setInput","characters","setCharacters","selectedCharacter","setSelectedCharacter","isDropdownOpen","setIsDropdownOpen","isLoading","setIsLoading","error","setError","isSidebarOpen","setIsSidebarOpen","isUserMenuOpen","setIsUserMenuOpen","chatHistory","setChatHistory","selectedChat","setSelectedChat","isCharacterSelectOpen","setIsCharacterSelectOpen","isSpeechEnabled","setIsSpeechEnabled","startListening","stopListening","speak","isListening","isSpeaking","speechError","onSpeechResult","text","handleSendMessage","Event","onSpeechEnd","messagesEndRef","dropdownRef","userMenuRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadInitialState","loadCharacters","loadAllChatHistory","defaultAssistant","id","name","movie","chat_style","example_responses","created_at","Date","toISOString","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","data","console","userId","history","map","chat","toString","title","lastMessage","last_message","message","timestamp","groupMessagesIntoBlocks","blocks","i","length","userMessage","botMessage","isUser","push","undefined","loadChatMessages","chatId","chatMessages","Array","isArray","Error","formattedMessages","msg","is_bot","character","find","c","character_id","handleLogout","handleSettings","log","e","preventDefault","trim","userMessageId","now","botMessageId","prev","isStreaming","fullResponse","user_id","filter","done","errorMessage","handleCharacterSelect","features","children","className","div","initial","x","animate","transition","type","stiffness","damping","fileName","_jsxFileName","lineNumber","columnNumber","button","whileHover","backgroundColor","onClick","toLocaleDateString","ref","variants","exit","block","isTyping","isActive","some","opacity","onSubmit","scale","whileTap","value","onChange","placeholder","disabled","isOpen","onCharacterSelect","_c","$RefreshReg$"],"sources":["C:/Users/ajits/fastapi-react-chatbot/frontend/src/components/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion, AnimatePresence, LazyMotion, domAnimation } from 'framer-motion';\nimport { \n    PaperAirplaneIcon, \n    ChevronDownIcon,\n    Bars3Icon,\n    UserCircleIcon,\n    ArrowLeftOnRectangleIcon,\n    Cog6ToothIcon,\n    UserGroupIcon,\n    MicrophoneIcon,\n    SpeakerWaveIcon,\n    SpeakerXMarkIcon\n} from '@heroicons/react/24/solid';\nimport MessageBubble from './MessageBubble';\nimport TypingIndicator from './TypingIndicator';\nimport VoiceIndicator from './VoiceIndicator';\nimport { CharacterSelect } from './CharacterSelect';\nimport { containerVariants, dropdownVariants } from '../styles/variants';\nimport { fetchCharacters, streamMessage, fetchChatMessages, fetchChatHistory, StreamResponse } from '../services/api';\nimport { Character } from '../services/api';\nimport { logout } from '../services/auth';\nimport { useSpeech } from '../hooks/useSpeech';\n\n// Using Character interface imported from API service\n\ninterface Message {\n    text: string;\n    isUser: boolean;\n    id: string;\n    isStreaming?: boolean;\n    character?: Character;\n    timestamp?: Date;\n    groupId?: string;  // to group related messages\n}\n\ninterface ConversationBlock {\n    id: string;\n    userMessage: Message;\n    botMessage?: Message;\n    timestamp: Date;\n}\n\nconst Chat: React.FC = () => {\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [conversationBlocks, setConversationBlocks] = useState<ConversationBlock[]>([]);\n    const [input, setInput] = useState<string>('');\n    const [characters, setCharacters] = useState<Character[]>([]);\n    const [selectedCharacter, setSelectedCharacter] = useState<Character | null>(null);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n    const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n    const [chatHistory, setChatHistory] = useState<ChatHistory[]>([]);\n    const [selectedChat, setSelectedChat] = useState<string | null>(null);\n    const [isCharacterSelectOpen, setIsCharacterSelectOpen] = useState(false);\n    const [isSpeechEnabled, setIsSpeechEnabled] = useState(true);\n\n    const {\n        startListening,\n        stopListening,\n        speak,\n        isListening,\n        isSpeaking,\n        error: speechError\n    } = useSpeech({\n        onSpeechResult: (text) => {\n            setInput(text);\n            // Auto-send message when received from speech\n            handleSendMessage(new Event('submit') as any);\n        },\n        onSpeechEnd: () => {\n            // Handle any cleanup needed when speech recognition ends\n        }\n    });\n\n    const messagesEndRef = useRef<HTMLDivElement>(null);\n    const dropdownRef = useRef<HTMLDivElement>(null);\n    const userMenuRef = useRef<HTMLDivElement>(null);\n\n    const scrollToBottom = useCallback(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }, []);\n\n    useEffect(() => {\n        const loadInitialState = async () => {\n            await loadCharacters();\n            await loadAllChatHistory();\n            const defaultAssistant = {\n                id: 0,\n                name: 'AI Assistant',\n                movie: 'Default',\n                chat_style: 'helpful and friendly',\n                example_responses: [],\n                created_at: new Date().toISOString()\n            };\n            setSelectedCharacter(defaultAssistant);\n            // Start with empty messages instead of welcome message\n            setMessages([]);\n        };\n        \n        loadInitialState();\n\n        const handleClickOutside = (event: MouseEvent) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n                setIsDropdownOpen(false);\n            }\n            if (userMenuRef.current && !userMenuRef.current.contains(event.target as Node)) {\n                setIsUserMenuOpen(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages, isLoading, scrollToBottom]);\n\n    const loadCharacters = async () => {\n        try {\n            const data = await fetchCharacters();\n            setCharacters(data);\n        } catch (error) {\n            setError('Failed to load characters');\n            console.error('Error fetching characters:', error);\n        }\n    };\n\n    const loadAllChatHistory = async () => {\n        try {\n            const userId = 1; // TODO: Get from auth context\n            const history = await fetchChatHistory(userId);\n            setChatHistory(history.map(chat => ({\n                id: chat.id.toString(),\n                title: `Chat ${chat.id}`,\n                lastMessage: chat.last_message || chat.message || 'No messages',\n                timestamp: new Date(chat.timestamp)\n            })));\n        } catch (error) {\n            console.error('Error loading chat history:', error);\n            setError('Failed to load chat history list');\n        }\n    };\n\n    const groupMessagesIntoBlocks = (messages: Message[]): ConversationBlock[] => {\n        const blocks: ConversationBlock[] = [];\n        for (let i = 0; i < messages.length; i += 2) {\n            const userMessage = messages[i];\n            const botMessage = messages[i + 1];\n            if (userMessage && userMessage.isUser) {\n                blocks.push({\n                    id: userMessage.id,\n                    userMessage,\n                    botMessage: botMessage && !botMessage.isUser ? botMessage : undefined,\n                    timestamp: userMessage.timestamp || new Date()\n                });\n            }\n        }\n        return blocks;\n    };\n\n    useEffect(() => {\n        const blocks = groupMessagesIntoBlocks(messages);\n        setConversationBlocks(blocks);\n    }, [messages]);\n\n    const loadChatMessages = async (chatId: string) => {\n        try {\n            setIsLoading(true);\n            setError(null);\n            \n            const chatMessages = await fetchChatMessages(chatId);\n            \n            if (!chatMessages || !Array.isArray(chatMessages)) {\n                throw new Error('Invalid chat history format');\n            }\n\n            const formattedMessages: Message[] = chatMessages.map((msg) => ({\n                id: msg.id.toString(),\n                text: msg.message,\n                isUser: !msg.is_bot,\n                character: characters.find(c => c.id === msg.character_id),\n                timestamp: new Date(msg.timestamp)\n            }));\n\n            setMessages(formattedMessages);\n            setSelectedChat(chatId);\n        } catch (error) {\n            console.error('Error loading chat messages:', error);\n            setError('Failed to load chat messages. Please try again.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleLogout = () => {\n        logout();\n    };\n\n    const handleSettings = () => {\n        console.log('Opening settings...');\n    };\n\n    const handleSendMessage = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (input.trim() && !isLoading) {\n            const userMessageId = Date.now().toString();\n            const userMessage = { \n                text: input, \n                isUser: true, \n                id: userMessageId,\n                character: selectedCharacter || undefined,\n                timestamp: new Date()\n            };\n            const botMessageId = (Date.now() + 1).toString();\n            \n            setMessages(prev => [...prev, userMessage, { \n                text: '', \n                isUser: false, \n                id: botMessageId,\n                isStreaming: true,\n                character: selectedCharacter || undefined,\n                timestamp: new Date()\n            }]);\n            setInput('');\n            setIsLoading(true);\n            setError(null);\n            \n            try {\n                let fullResponse = '';\n                \n                await streamMessage(\n                    {\n                        message: input,\n                        character_id: selectedCharacter?.id,\n                        user_id: 1\n                    },\n                    (data: StreamResponse) => {\n                        if (data.error) {\n                            setError(data.error);\n                            setMessages(prev => prev.filter(msg => msg.id !== botMessageId));\n                            setIsLoading(false);\n                        } else {\n                            fullResponse += data.text || '';\n                            setMessages(prev => prev.map(msg => \n                                msg.id === botMessageId \n                                    ? { \n                                        ...msg, \n                                        text: fullResponse,\n                                        isStreaming: !data.done \n                                    }\n                                    : msg\n                            ));\n\n                            if (data.done) {\n                                setIsLoading(false);\n                                if (isSpeechEnabled && fullResponse) {\n                                    speak(fullResponse);\n                                }\n                            }\n                            scrollToBottom();\n                        }\n                    }\n                );\n            } catch (error) {\n                const errorMessage = error instanceof Error ? error.message : 'Failed to send message';\n                setError(errorMessage);\n                console.error('Error sending message:', error);\n                setIsLoading(false);\n            }\n        }\n    };\n\n    const handleCharacterSelect = async (character: Character) => {\n        setSelectedCharacter(character);\n        setIsCharacterSelectOpen(false);\n        \n        // Clear current messages and show welcome message\n        setMessages([{\n            id: 'welcome',\n            text: character.id === 0 \n                ? \"Switched to AI Assistant. How can I help you?\"\n                : `Switched to ${character.name} from ${character.movie}. How can I assist you?`,\n            isUser: false,\n            character: character,\n            timestamp: new Date()\n        }]);\n        \n        // Clear selected chat since we're starting fresh\n        setSelectedChat(null);\n    };\n\n    return (\n        <LazyMotion features={domAnimation}>\n            <div className=\"flex h-screen bg-gray-900\">\n                <motion.div \n                    initial={{ x: isSidebarOpen ? 0 : -320 }}\n                    animate={{ x: isSidebarOpen ? 0 : -320 }}\n                    transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                    className=\"w-80 bg-gray-800 border-r border-gray-700 flex flex-col\"\n                >\n                    <div className=\"p-4 border-b border-gray-700\">\n                        <h2 className=\"text-xl font-semibold text-white\">Chat History</h2>\n                    </div>\n                    <div className=\"flex-1 overflow-y-auto p-4\">\n                        {chatHistory.map((chat) => (\n                            <motion.button\n                                key={chat.id}\n                                whileHover={{ backgroundColor: 'rgba(75, 85, 99, 0.4)' }}\n                                onClick={() => loadChatMessages(chat.id)}\n                                className={`w-full p-3 rounded-lg mb-2 text-left ${\n                                    selectedChat === chat.id ? 'bg-gray-700' : 'hover:bg-gray-700'\n                                } transition-colors duration-200`}\n                            >\n                                <h3 className=\"text-white font-medium\">{chat.title}</h3>\n                                <p className=\"text-gray-400 text-sm truncate\">{chat.lastMessage}</p>\n                                <span className=\"text-gray-500 text-xs\">\n                                    {chat.timestamp.toLocaleDateString()}\n                                </span>\n                            </motion.button>\n                        ))}\n                    </div>\n                </motion.div>\n\n                <div className=\"flex-1 flex flex-col\">\n                    <div className=\"h-16 border-b border-gray-700 flex items-center justify-between px-4\">\n                        <button\n                            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n                            className=\"p-2 hover:bg-gray-700 rounded-lg transition-colors duration-200\"\n                        >\n                            <Bars3Icon className=\"w-6 h-6 text-white\" />\n                        </button>\n\n                        <button\n                            onClick={() => setIsCharacterSelectOpen(true)}\n                            className=\"flex items-center space-x-2 p-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors duration-200 text-white\"\n                        >\n                            <UserGroupIcon className=\"w-5 h-5\" />\n                            <span>{selectedCharacter ? selectedCharacter.name : 'Select Character'}</span>\n                        </button>\n\n                        <div className=\"relative\" ref={userMenuRef}>\n                            <button\n                                onClick={() => setIsUserMenuOpen(!isUserMenuOpen)}\n                                className=\"p-2 hover:bg-gray-700 rounded-full transition-colors duration-200\"\n                            >\n                                <UserCircleIcon className=\"w-8 h-8 text-white\" />\n                            </button>\n\n                            <AnimatePresence>\n                                {isUserMenuOpen && (\n                                    <motion.div\n                                        variants={dropdownVariants}\n                                        initial=\"hidden\"\n                                        animate=\"visible\"\n                                        exit=\"hidden\"\n                                        className=\"absolute right-0 mt-2 w-48 bg-gray-700 rounded-lg shadow-xl z-10\"\n                                    >\n                                        <div className=\"py-2\">\n                                            <button\n                                                onClick={handleSettings}\n                                                className=\"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\"\n                                            >\n                                                <Cog6ToothIcon className=\"w-5 h-5 mr-2\" />\n                                                Settings\n                                            </button>\n                                            <button\n                                                onClick={handleLogout}\n                                                className=\"w-full px-4 py-2 text-left text-white hover:bg-gray-600 transition-colors duration-200 flex items-center\"\n                                            >\n                                                <ArrowLeftOnRectangleIcon className=\"w-5 h-5 mr-2\" />\n                                                Logout\n                                            </button>\n                                        </div>\n                                    </motion.div>\n                                )}\n                            </AnimatePresence>\n                        </div>\n                    </div>\n\n                    <div className=\"flex-1 overflow-y-auto p-4\">\n                        <div className=\"space-y-6\">\n                            <AnimatePresence initial={false}>\n                                {conversationBlocks.map((block) => (\n                                    <motion.div\n                                        key={block.id}\n                                        className=\"conversation-block space-y-2\"\n                                    >\n                                        <MessageBubble\n                                            message={block.userMessage.text}\n                                            isUser={true}\n                                            character={block.userMessage.character}\n                                        />\n                                        {block.botMessage && (\n                                            <MessageBubble\n                                                message={block.botMessage.text}\n                                                isUser={false}\n                                                isTyping={block.botMessage.isStreaming}\n                                                character={block.botMessage.character}\n                                            />\n                                        )}\n                                    </motion.div>\n                                ))}\n                            </AnimatePresence>\n                            {(isListening || isSpeaking) && (\n                                <div className=\"flex justify-center\">\n                                    <VoiceIndicator \n                                        isActive={isListening}\n                                        type=\"listening\"\n                                    />\n                                    <VoiceIndicator \n                                        isActive={isSpeaking}\n                                        type=\"speaking\"\n                                    />\n                                </div>\n                            )}\n                            {isLoading && !messages.some(msg => msg.isStreaming) && (\n                                <motion.div\n                                    initial={{ opacity: 0 }}\n                                    animate={{ opacity: 1 }}\n                                    exit={{ opacity: 0 }}\n                                >\n                                    <TypingIndicator />\n                                </motion.div>\n                            )}\n                            {error && (\n                                <motion.div\n                                    initial={{ opacity: 0 }}\n                                    animate={{ opacity: 1 }}\n                                    className=\"text-red-500 text-sm p-2 rounded-lg bg-red-500/10\"\n                                >\n                                    {error}\n                                </motion.div>\n                            )}\n                            <div ref={messagesEndRef} />\n                        </div>\n                    </div>\n\n                    <div className=\"p-4 border-t border-gray-700\">\n                        <form onSubmit={handleSendMessage} className=\"flex gap-2\">\n                            <div className=\"flex gap-2\">\n                                <motion.button\n                                    type=\"button\"\n                                    whileHover={{ scale: 1.05 }}\n                                    whileTap={{ scale: 0.95 }}\n                                    onClick={() => {\n                                        if (isListening) {\n                                            stopListening();\n                                        } else {\n                                            startListening();\n                                        }\n                                    }}\n                                    className={`p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${\n                                        isListening \n                                            ? 'bg-blue-600 text-white' \n                                            : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    }`}\n                                >\n                                    <MicrophoneIcon className=\"w-6 h-6\" />\n                                </motion.button>\n                                <motion.button\n                                    type=\"button\"\n                                    whileHover={{ scale: 1.05 }}\n                                    whileTap={{ scale: 0.95 }}\n                                    onClick={() => setIsSpeechEnabled(!isSpeechEnabled)}\n                                    className={`p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 ${\n                                        isSpeechEnabled \n                                            ? 'bg-purple-600 text-white' \n                                            : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    }`}\n                                >\n                                    {isSpeechEnabled ? (\n                                        <SpeakerWaveIcon className=\"w-6 h-6\" />\n                                    ) : (\n                                        <SpeakerXMarkIcon className=\"w-6 h-6\" />\n                                    )}\n                                </motion.button>\n                            </div>\n                            <input\n                                type=\"text\"\n                                value={input}\n                                onChange={(e) => setInput(e.target.value)}\n                                placeholder={isListening ? 'Listening...' : 'Type your message...'}\n                                className=\"flex-1 p-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                            />\n                            <motion.button\n                                type=\"submit\"\n                                whileHover={{ scale: 1.05 }}\n                                whileTap={{ scale: 0.95 }}\n                                disabled={isLoading || !input.trim()}\n                                className=\"p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                                <PaperAirplaneIcon className=\"w-6 h-6\" />\n                            </motion.button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n            <CharacterSelect\n                isOpen={isCharacterSelectOpen}\n                onCharacterSelect={handleCharacterSelect}\n            />\n        </LazyMotion>\n    );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}